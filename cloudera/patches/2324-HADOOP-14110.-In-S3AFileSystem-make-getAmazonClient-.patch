From 61ce69c849612c8ab25a592aad3cd21985124ccd Mon Sep 17 00:00:00 2001
From: Mingliang Liu <liuml07@apache.org>
Date: Fri, 24 Feb 2017 11:15:59 -0800
Subject: [PATCH 2324/2748] HADOOP-14110. In S3AFileSystem, make
 getAmazonClient() package private; export
 getBucketLocation(). Contributed by Steve
 Loughran

(cherry picked from commit dd2a9cfc3e8245be47c3f1f751caa77d623656a0)

Change-Id: I6ab6276283e9a3ec153268d2ba36b42650280626
(cherry picked from commit d5b2a2ac37602269557df619c3274b65682ac378)
---
 .../org/apache/hadoop/fs/s3a/S3AFileSystem.java    |   26 +++++++++++++++++++-
 .../fs/s3a/s3guard/DynamoDBMetadataStore.java      |   17 ++-----------
 .../fs/s3a/s3guard/TestDynamoDBMetadataStore.java  |    2 +-
 3 files changed, 28 insertions(+), 17 deletions(-)

diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java
index 62472b6..f225ad9 100644
--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java
+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java
@@ -403,11 +403,35 @@ public int getDefaultPort() {
    * Returns the S3 client used by this filesystem.
    * @return AmazonS3Client
    */
-  public AmazonS3 getAmazonS3Client() {
+  AmazonS3 getAmazonS3Client() {
     return s3;
   }
 
   /**
+   * Get the region of a bucket.
+   * @return the region in which a bucket is located
+   * @throws IOException on any failure.
+   */
+  public String getBucketLocation() throws IOException {
+    return getBucketLocation(bucket);
+  }
+
+  /**
+   * Get the region of a bucket.
+   * @param bucketName the name of the bucket
+   * @return the region in which a bucket is located
+   * @throws IOException on any failure.
+   */
+  public String getBucketLocation(String bucketName) throws IOException {
+    try {
+      return s3.getBucketLocation(bucketName);
+    } catch (AmazonClientException e) {
+      throw translateException("getBucketLocation()",
+          bucketName, e);
+    }
+  }
+
+  /**
    * Returns the read ahead range value used by this filesystem
    * @return
    */
diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java
index c7d7ac3..19018e3 100644
--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java
+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java
@@ -199,14 +199,7 @@
   @VisibleForTesting
   static DynamoDB createDynamoDB(S3AFileSystem fs) throws IOException {
     Preconditions.checkNotNull(fs);
-    String region;
-    try {
-      region = fs.getAmazonS3Client().getBucketLocation(fs.getBucket());
-    } catch (AmazonClientException e) {
-      throw translateException("Determining bucket location",
-          fs.getUri().toString(), e);
-    }
-    return createDynamoDB(fs, region);
+    return createDynamoDB(fs, fs.getBucketLocation());
   }
 
   /**
@@ -236,13 +229,7 @@ public void initialize(FileSystem fs) throws IOException {
         "DynamoDBMetadataStore only supports S3A filesystem.");
     final S3AFileSystem s3afs = (S3AFileSystem) fs;
     final String bucket = s3afs.getBucket();
-    try {
-      region = s3afs.getAmazonS3Client().getBucketLocation(bucket);
-    } catch (AmazonClientException e) {
-      throw translateException("Determining bucket location",
-          fs.getUri().toString(), e);
-    }
-
+    region = s3afs.getBucketLocation();
     username = s3afs.getUsername();
     conf = s3afs.getConf();
     Class<? extends DynamoDBClientFactory> cls = conf.getClass(
diff --git a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestDynamoDBMetadataStore.java b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestDynamoDBMetadataStore.java
index 2b1877a..d123800 100644
--- a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestDynamoDBMetadataStore.java
+++ b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestDynamoDBMetadataStore.java
@@ -215,7 +215,7 @@ public void testInitialize() throws IOException {
       assertNotNull(ddbms.getTable());
       assertEquals(tableName, ddbms.getTable().getTableName());
       assertEquals("DynamoDB table should be in the same region as S3 bucket",
-          s3afs.getAmazonS3Client().getBucketLocation(tableName),
+          s3afs.getBucketLocation(tableName),
           ddbms.getRegion());
     }
   }
-- 
1.7.9.5

