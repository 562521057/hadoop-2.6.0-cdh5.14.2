From 74de47bbac9b7b45d2bc445ce3c3b028e0f85092 Mon Sep 17 00:00:00 2001
From: Lei Xu <lei@apache.org>
Date: Wed, 20 Jul 2016 20:38:20 -0700
Subject: [PATCH 1676/2748] HADOOP-12928. Update netty to 3.10.5.Final to sync
 with zookeeper. (lei)

(cherry picked from commit 521f34317a2f94ea7e60f3d59db335cef3358e5b)

Conflicts:
	hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java

Change-Id: I3a619ed5114e7124b7fd24707b249d05f439b1b8
---
 .../tools/TestDelegationTokenRemoteFetcher.java    |    6 ++--
 .../org/apache/hadoop/mapred/ShuffleHandler.java   |   34 ++++++++++++--------
 hadoop-project/pom.xml                             |    2 +-
 3 files changed, 24 insertions(+), 18 deletions(-)

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/tools/TestDelegationTokenRemoteFetcher.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/tools/TestDelegationTokenRemoteFetcher.java
index 6c30c47..2188658 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/tools/TestDelegationTokenRemoteFetcher.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/tools/TestDelegationTokenRemoteFetcher.java
@@ -242,7 +242,7 @@ public void handle(Channel channel, Token<DelegationTokenIdentifier> token,
       ChannelBuffer cbuffer = ChannelBuffers.buffer(fileLength);
       cbuffer.writeBytes(out.getData());
       HttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK);
-      response.setHeader(HttpHeaders.Names.CONTENT_LENGTH,
+      response.headers().set(HttpHeaders.Names.CONTENT_LENGTH,
           String.valueOf(fileLength));
       response.setContent(cbuffer);
       channel.write(response).addListener(ChannelFutureListener.CLOSE);
@@ -259,7 +259,7 @@ public void handle(Channel channel, Token<DelegationTokenIdentifier> token,
       ChannelBuffer cbuffer = ChannelBuffers.buffer(bytes.length);
       cbuffer.writeBytes(bytes);
       HttpResponse response = new DefaultHttpResponse(HTTP_1_1, OK);
-      response.setHeader(HttpHeaders.Names.CONTENT_LENGTH,
+      response.headers().set(HttpHeaders.Names.CONTENT_LENGTH,
           String.valueOf(bytes.length));
       response.setContent(cbuffer);
       channel.write(response).addListener(ChannelFutureListener.CLOSE);
@@ -315,7 +315,7 @@ public void messageReceived(ChannelHandlerContext ctx, final MessageEvent e)
         // Mimic SPNEGO authentication
         HttpResponse response = new DefaultHttpResponse(HTTP_1_1,
             HttpResponseStatus.OK);
-        response.addHeader("Set-Cookie", "hadoop-auth=1234");
+        response.headers().add("Set-Cookie", "hadoop-auth=1234");
         e.getChannel().write(response).addListener(ChannelFutureListener.CLOSE);
       } else if (request.getMethod() != GET) {
         e.getChannel().close();
diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java
index e5fa57a..55fdbf4 100644
--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java
+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java
@@ -831,9 +831,12 @@ public void messageReceived(ChannelHandlerContext ctx, MessageEvent evt)
       }
       // Check whether the shuffle version is compatible
       if (!ShuffleHeader.DEFAULT_HTTP_HEADER_NAME.equals(
-          request.getHeader(ShuffleHeader.HTTP_HEADER_NAME))
+          request.headers() != null ?
+              request.headers().get(ShuffleHeader.HTTP_HEADER_NAME) : null)
           || !ShuffleHeader.DEFAULT_HTTP_HEADER_VERSION.equals(
-              request.getHeader(ShuffleHeader.HTTP_HEADER_VERSION))) {
+              request.headers() != null ?
+                  request.headers()
+                      .get(ShuffleHeader.HTTP_HEADER_VERSION) : null)) {
         sendError(ctx, "Incompatible shuffle request version", BAD_REQUEST);
       }
       final Map<String,List<String>> q =
@@ -1044,13 +1047,15 @@ protected void populateHeaders(List<String> mapIds, String outputBaseStr,
     protected void setResponseHeaders(HttpResponse response,
         boolean keepAliveParam, long contentLength) {
       if (!connectionKeepAliveEnabled && !keepAliveParam) {
-        LOG.info("Setting connection close header...");
-        response.setHeader(HttpHeaders.CONNECTION, CONNECTION_CLOSE);
+        if (LOG.isDebugEnabled()) {
+          LOG.debug("Setting connection close header...");
+        }
+        response.headers().set(HttpHeaders.CONNECTION, CONNECTION_CLOSE);
       } else {
-        response.setHeader(HttpHeaders.CONTENT_LENGTH,
+        response.headers().set(HttpHeaders.CONTENT_LENGTH,
           String.valueOf(contentLength));
-        response.setHeader(HttpHeaders.CONNECTION, HttpHeaders.KEEP_ALIVE);
-        response.setHeader(HttpHeaders.KEEP_ALIVE, "timeout="
+        response.headers().set(HttpHeaders.CONNECTION, HttpHeaders.KEEP_ALIVE);
+        response.headers().set(HttpHeaders.KEEP_ALIVE, "timeout="
             + connectionKeepAliveTimeOut);
         LOG.info("Content Length in shuffle : " + contentLength);
       }
@@ -1078,7 +1083,7 @@ protected void verifyRequest(String appid, ChannelHandlerContext ctx,
       String enc_str = SecureShuffleUtils.buildMsgFrom(requestUri);
       // hash from the fetcher
       String urlHashStr =
-        request.getHeader(SecureShuffleUtils.HTTP_HEADER_URL_HASH);
+          request.headers().get(SecureShuffleUtils.HTTP_HEADER_URL_HASH);
       if (urlHashStr == null) {
         LOG.info("Missing header hash for " + appid);
         throw new IOException("fetcher cannot be authenticated");
@@ -1094,11 +1099,12 @@ protected void verifyRequest(String appid, ChannelHandlerContext ctx,
       String reply =
         SecureShuffleUtils.generateHash(urlHashStr.getBytes(Charsets.UTF_8), 
             tokenSecret);
-      response.setHeader(SecureShuffleUtils.HTTP_HEADER_REPLY_URL_HASH, reply);
+      response.headers().set(
+          SecureShuffleUtils.HTTP_HEADER_REPLY_URL_HASH, reply);
       // Put shuffle version into http header
-      response.setHeader(ShuffleHeader.HTTP_HEADER_NAME,
+      response.headers().set(ShuffleHeader.HTTP_HEADER_NAME,
           ShuffleHeader.DEFAULT_HTTP_HEADER_NAME);
-      response.setHeader(ShuffleHeader.HTTP_HEADER_VERSION,
+      response.headers().set(ShuffleHeader.HTTP_HEADER_VERSION,
           ShuffleHeader.DEFAULT_HTTP_HEADER_VERSION);
       if (LOG.isDebugEnabled()) {
         int len = reply.length();
@@ -1164,11 +1170,11 @@ protected void sendError(ChannelHandlerContext ctx,
     protected void sendError(ChannelHandlerContext ctx, String message,
         HttpResponseStatus status) {
       HttpResponse response = new DefaultHttpResponse(HTTP_1_1, status);
-      response.setHeader(CONTENT_TYPE, "text/plain; charset=UTF-8");
+      response.headers().set(CONTENT_TYPE, "text/plain; charset=UTF-8");
       // Put shuffle version into http header
-      response.setHeader(ShuffleHeader.HTTP_HEADER_NAME,
+      response.headers().set(ShuffleHeader.HTTP_HEADER_NAME,
           ShuffleHeader.DEFAULT_HTTP_HEADER_NAME);
-      response.setHeader(ShuffleHeader.HTTP_HEADER_VERSION,
+      response.headers().set(ShuffleHeader.HTTP_HEADER_VERSION,
           ShuffleHeader.DEFAULT_HTTP_HEADER_VERSION);
       response.setContent(
         ChannelBuffers.copiedBuffer(message, CharsetUtil.UTF_8));
diff --git a/hadoop-project/pom.xml b/hadoop-project/pom.xml
index 41d54c0..7f2b048 100644
--- a/hadoop-project/pom.xml
+++ b/hadoop-project/pom.xml
@@ -561,7 +561,7 @@
       <dependency>
         <groupId>io.netty</groupId>
         <artifactId>netty</artifactId>
-        <version>3.6.2.Final</version>
+        <version>3.10.5.Final</version>
       </dependency>
 
       <dependency>
-- 
1.7.9.5

