From 4966a4f85e9c0677fcad042c2bea62b61c762cde Mon Sep 17 00:00:00 2001
From: Aaron Fabbri <fabbri@cloudera.com>
Date: Tue, 16 May 2017 18:00:46 -0700
Subject: [PATCH 2438/2748] CDH-53913 Revert "HADOOP-14255. S3A to delete
 unnecessary fake directory objects in mkdirs().
 Contributed by Mingliang Liu"

This reverts commit 37272e5831d840ca0da058ab02e71c366f4bbd55.

Change-Id: Ide3995c49b992e14df0b783bbc23f583eaf7c68f
---
 .../fs/contract/AbstractContractMkdirTest.java     |   42 --------------------
 .../org/apache/hadoop/fs/s3a/S3AFileSystem.java    |    3 +-
 2 files changed, 2 insertions(+), 43 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/contract/AbstractContractMkdirTest.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/contract/AbstractContractMkdirTest.java
index 71d2706..427b0e9 100644
--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/contract/AbstractContractMkdirTest.java
+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/contract/AbstractContractMkdirTest.java
@@ -126,46 +126,4 @@ public void testMkdirSlashHandling() throws Throwable {
     assertPathExists("check path existence without trailing slash failed",
         path("testmkdir/b"));
   }
-
-  @Test
-  public void testMkdirsPopulatingAllNonexistentAncestors() throws IOException {
-    describe("Verify mkdir will populate all its non-existent ancestors");
-    final FileSystem fs = getFileSystem();
-
-    final Path parent = path("testMkdirsPopulatingAllNonexistentAncestors");
-    assertTrue(fs.mkdirs(parent));
-    assertPathExists(parent + " should exist before making nested dir", parent);
-
-    Path nested = path(parent + "/a/b/c/d/e/f/g/h/i/j/k/L");
-    assertTrue(fs.mkdirs(nested));
-    while (nested != null && !nested.equals(parent) && !nested.isRoot()) {
-      assertPathExists(nested + " nested dir should exist", nested);
-      nested = nested.getParent();
-    }
-  }
-
-  @Test
-  public void testMkdirsDoesNotRemoveParentDirectories() throws IOException {
-    describe("Verify mkdir will make its parent existent");
-    final FileSystem fs = getFileSystem();
-
-    final Path parent = path("testMkdirsDoesNotRemoveParentDirectories");
-    assertTrue(fs.mkdirs(parent));
-
-    Path p = parent;
-    for (int i = 0; i < 10; i++) {
-      assertTrue(fs.mkdirs(p));
-      assertPathExists(p + " should exist after mkdir(" + p + ")", p);
-      p = path(p + "/dir-" + i);
-    }
-
-    // After mkdirs(sub-directory), its parent directory still exists
-    p = p.getParent();
-    while (p != null && !p.equals(parent) && !p.isRoot()) {
-      assertPathExists("Path " + p + " should exist", p);
-      assertIsDirectory(p);
-      p = p.getParent();
-    }
-  }
-
 }
diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java
index 2c91767..4d9f56e 100644
--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java
+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java
@@ -1649,6 +1649,8 @@ public boolean mkdirs(Path path, FsPermission permission) throws IOException,
    * @throws IOException other IO problems
    * @throws AmazonClientException on failures inside the AWS SDK
    */
+  // TODO: If we have created an empty file at /foo/bar and we then call
+  // mkdirs for /foo/bar/baz/roo what happens to the empty file /foo/bar/?
   private boolean innerMkdirs(Path p, FsPermission permission)
       throws IOException, FileAlreadyExistsException, AmazonClientException {
     Path f = qualify(p);
@@ -1699,7 +1701,6 @@ private boolean innerMkdirs(Path p, FsPermission permission)
       String key = pathToKey(f);
       createFakeDirectory(key);
       S3Guard.makeDirsOrdered(metadataStore, metadataStoreDirs, username);
-      deleteUnnecessaryFakeDirectories(f.getParent());
       return true;
     }
   }
-- 
1.7.9.5

