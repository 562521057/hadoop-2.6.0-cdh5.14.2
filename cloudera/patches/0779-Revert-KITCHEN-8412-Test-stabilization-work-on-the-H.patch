From 3dac050696b4b0a985bcd488b126d14988345f49 Mon Sep 17 00:00:00 2001
From: Charlie Helin <chelin@cloudera.com>
Date: Thu, 10 Sep 2015 13:52:07 -0700
Subject: [PATCH 0779/2748] Revert "KITCHEN-8412: Test stabilization work on
 the Hadoop repo"

This reverts commit 420bc66db597eb4ae572b2be6861347b7fd29d9d.

Change-Id: I2c965c4fcfd405db5120967027bbd8b414045c12
---
 cloudera/build.sh                |    1 -
 cloudera/excludes.txt            |   27 ---
 cloudera/lib.sh                  |  426 --------------------------------------
 cloudera/post_commit_hook.sh     |    7 -
 cloudera/post_commit_hook.sh.bak |   29 +++
 cloudera/pre_commit_hook.sh      |   23 +-
 cloudera/test-all.sh             |    1 -
 cloudera/test-code-coverage.sh   |    1 -
 cloudera/test-flaky.sh           |    1 -
 cloudera/test-info.json          |   41 ----
 cloudera/test-stable.sh          |    1 -
 hadoop-project/pom.xml           |    8 +-
 12 files changed, 55 insertions(+), 511 deletions(-)
 delete mode 100644 cloudera/build.sh
 delete mode 100644 cloudera/excludes.txt
 delete mode 100755 cloudera/lib.sh
 delete mode 100644 cloudera/post_commit_hook.sh
 create mode 100644 cloudera/post_commit_hook.sh.bak
 delete mode 100644 cloudera/test-all.sh
 delete mode 100644 cloudera/test-code-coverage.sh
 delete mode 100644 cloudera/test-flaky.sh
 delete mode 100644 cloudera/test-info.json
 delete mode 100644 cloudera/test-stable.sh

diff --git a/cloudera/build.sh b/cloudera/build.sh
deleted file mode 100644
index f1f641a..0000000
--- a/cloudera/build.sh
+++ /dev/null
@@ -1 +0,0 @@
-#!/usr/bin/env bash
diff --git a/cloudera/excludes.txt b/cloudera/excludes.txt
deleted file mode 100644
index 6abf3cf..0000000
--- a/cloudera/excludes.txt
+++ /dev/null
@@ -1,27 +0,0 @@
-org/apache/hadoop/crypto/key/kms/server/TestKMS.java
-
-org/apache/hadoop/fs/viewfs/ViewFileSystemBaseTest.java
-org/apache/hadoop/fs/viewfs/ViewFsBaseTest.java
-
-org/apache/hadoop/ha/TestZKFailoverControllerStress.java
-
-org/apache/hadoop/mapred/TestJavaSerialization.java
-org/apache/hadoop/mapred/TestLocalJobSubmission.java
-
-org/apache/hadoop/mapreduce/TestLargeSort.java
-org/apache/hadoop/mapreduce/jobhistory/TestJobHistoryEventHandler.java
-
-org/apache/hadoop/security/TestShellBasedIdMapping.java
-org/apache/hadoop/security/ssl/TestReloadingX509TrustManager.java
-
-org/apache/hadoop/yarn/client/TestApplicationClientProtocolOnHA.java
-org/apache/hadoop/yarn/client/TestApplicationMasterServiceProtocolOnHA.java
-org/apache/hadoop/yarn/client/TestResourceTrackerOnHA.java
-
-org/apache/hadoop/yarn/server/applicationhistoryservice/TestApplicationHistoryServer.java
-org/apache/hadoop/yarn/server/nodemanager/containermanager/TestContainerManagerRecovery.java
-org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/TestLogAggregationService.java
-org/apache/hadoop/yarn/server/resourcemanager/TestContainerResourceUsage.java
-org/apache/hadoop/yarn/server/resourcemanager/metrics/TestSystemMetricsPublisher.java
-org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/TestContainerAllocation.java
-org/apache/hadoop/yarn/server/timeline/webapp/TestTimelineWebServices.java
diff --git a/cloudera/lib.sh b/cloudera/lib.sh
deleted file mode 100755
index 9c20054..0000000
--- a/cloudera/lib.sh
+++ /dev/null
@@ -1,426 +0,0 @@
-#!/bin/bash
-
-# Build - produces the necessary artifacts for testing. Takes the following
-# arguments
-#
-# - POM -- the POM to build
-# - MAVEN_FLAGS -- and Maven flags, properties or options to the build
-# - CODE_COVERAGE -- iff 'true' the produce code coverage artifacts
-# - NO_BUILD -- iff 'true' then skip this step
-function build() {
-  local _POM=$1
-  local _MAVEN_FLAGS=$2
-  local _CODE_COVERAGE=$3
-  local _NO_BUILD=$4
-
-  if [[ "$_NO_BUILD" != "true" ]]; then
-    echo
-    echo ----
-    echo Building: ${_POM} with "${_MAVEN_FLAGS}"
-    echo ----
-    echo
-    if [ "$_CODE_COVERAGE" == "true" ]; then
-      mvn -f ${_POM} -e install ${_MAVEN_FLAGS} -DskipTests -Pcloudera-clover
-    else
-      mvn -f ${_POM} -e install ${_MAVEN_FLAGS} -DskipTests
-    fi
-  else
-    echo
-    echo ----
-    echo Skipping build
-    echo ----
-    echo
-  fi
-}
-
-# Run all the tests. Takes the following arguments:
-#
-# - POM -- the POM to test
-# - MAVEN_FLAGS -- and Maven flags, properties or options to the test
-function runAllTests() {
-  local _POM=$1
-  local _MAVEN_FLAGS=$2
-
-  echo
-  echo ----
-  echo Running all tests in ${_POM} with ${_MAVEN_FLAGS}
-  echo ----
-  echo
-  mvn -Pcloudera-unittest -f ${_POM} -e findbugs:findbugs checkstyle:checkstyle test ${_MAVEN_FLAGS} -Dtest.excludes.file=
-}
-
-# Run all the tests with code coverage. Will also upload the results to http://sonar.jenkins.cloudera.com:9000.
-# Takes the following arguments:
-#
-# - POM -- the POM to test
-# - MAVEN_FLAGS -- and Maven flags, properties or options to the test
-# - EXCLUDES -- unstable tests that shouldn't be run
-function runCodeCoverage() {
-  local _POM=$1
-  local _MAVEN_FLAGS=$2
-  local _EXCLUDES=$3
-
-  echo
-  echo ----
-  echo Running code coverage tests in ${_POM} with ${_MAVEN_FLAGS}
-  echo ----
-  echo
-  mvn -f -Pcloudera-clover -Pcloudera-unittest ${_POM} -e findbugs:findbugs checkstyle:checkstyle test ${_MAVEN_FLAGS} -Dtest.excludes.file=${_EXCLUDES}
-
-  echo
-  echo ----
-  echo Publishing to sonar ${_POM} with ${_MAVEN_FLAGS}
-  echo ----
-  echo
-  mvn -Pcloudera-clover -f ${_POM} ${_MAVEN_FLAGS} sonar:sonar
-}
-
-# Run all the stable tests. Takes the following arguments:
-#
-# - POM -- the POM to test
-# - MAVEN_FLAGS -- and Maven flags, properties or options to the test
-# - EXCLUDES -- unstable tests that shouldn't be run
-function runStableTests() {
-  local _POM=$1
-  local _MAVEN_FLAGS=$2
-  local _EXCLUDES=$3
-
-  echo
-  echo ----
-  echo Running stable tests in ${_POM} with ${_MAVEN_FLAGS}
-  echo ----
-  echo
-  mvn -Pcloudera-unittest -f ${_POM} -e findbugs:findbugs checkstyle:checkstyle test ${_MAVEN_FLAGS} -Dtest.excludes.file=${_EXCLUDES}
-}
-
-# Setup the infra_tools and return the location of the infra_tools
-function provisionInfraTools() {
-  rm -r -f infra_tools
-  wget -q http://github.mtv.cloudera.com/QE/infra_tools/archive/master.zip
-  unzip -q -o master.zip
-  mv infra_tools-master infra_tools
-  rm master.zip
-
-  local _INFRA_TOOLS_LOCATION=`pwd`/infra_tools
-  ${_INFRA_TOOLS_LOCATION}/setupPyEnv.sh
-
-  INFRA_TOOLS_LOCATION=${_INFRA_TOOLS_LOCATION}
-}
-
-# Combines xUnit formated files into a single result file. This allows a single
-# test case to be present multiple times.
-function mergeTestResults() {
-  if [[ -z ${INFRA_TOOLS_LOCATION} ]]; then
-    echo INFRA_TOOLS_LOCATION is not defined
-    exit 1
-  fi
-
-  local _INFRA_TOOLS_LOCATION=$1
-  local _CLOUDERA_DIR=$2
-  local _FILE_PATTERN=$3
-
-  # merge the results
-  ${INFRA_TOOLS_LOCATION}/xunit_merge.py --config ${_CLOUDERA_DIR}/test-info.json --test-dir `pwd` --file-pattern=${_FILE_PATTERN}
-}
-
-# Run all the flaky tests. At the end a test-result.json containing the results
-# for each test invocationTakes will be rendered. the following arguments:
-#
-# - POM -- the POM to test
-# - MAVEN_FLAGS -- and Maven flags, properties or options to the test
-# - INCLUDES -- unstable tests that should be run
-# - ITERATIONS -- the number of times to run the tests
-function runFlakyTests() {
-  local _POM=$1
-  local _MAVEN_FLAGS=$2
-  local _INCLUDES=$3
-  local _ITERATIONS=$4
-
-  provisionInfraTools
-  for i in $(eval echo "{1..$_ITERATIONS}")
-  do
-    echo
-    echo ----
-    echo Running excluded tests in ${_POM} iteration ${i}/${_ITERATIONS} with ${_MAVEN_FLAGS}
-    echo ----
-    echo
-
-    mvn -Pcloudera-unittest -f ${_POM} -e test ${_MAVEN_FLAGS} -Dtest.includes.file=${_INCLUDES} -Dtest.excludes.file=
-
-    # merge the results, with the prior run(s)
-    mergeTestResults ${INFRA_TOOLS_DIR} ${CLOUDERA_DIR} TEST.*\.xml
-  done
-}
-
-# Setup Java specific variables like Java options as well as source and target specifiers. Assumes that
-# JAVA_7_HOME and optionally JAVA_8_HOME is defined.
-#
-# Takes the the following arguments
-#
-# JAVA - the source version
-# TARGET-JAVA - the target version
-#
-# The outcome is that the following variables is defined
-# JAVA_HOME - The home directory of Java
-# JAVA_VERSION - the source Java version
-# JAVA_TARGET_VERSION - The targeted Java version
-# MAVEN_OPTS - Java specific maven options
-function setupJava() {
-  local _JAVA=$1
-  local _TARGET_JAVA=$2
-
-  case ${_JAVA} in
-    1.7)
-      MAVEN_OPTS="-Xmx1g -Xms128m -XX:MaxPermSize=256m"
-      JAVA_OPTS="-Xmx4g -Xms1g -XX:MaxPermSize=256m"
-      if [[ -z $JAVA_7_HOME ]]; then
-        echo JAVA_7_HOME is not set
-        exit 1
-      fi
-      JAVA_HOME=${JAVA_7_HOME}
-      JAVA_VERSION=1.7
-      ;;
-
-    1.8)
-      MAVEN_OPTS="-Xmx1g -Xms128m"
-      JAVA_OPTS="-Xmx4g -Xms1g"
-      if [[ -z $JAVA_8_HOME ]]; then
-        echo JAVA_8_HOME is not set
-        exit 1
-      fi
-      JAVA_HOME=${JAVA_8_HOME}
-      JAVA_VERSION=1.8
-      ;;
-
-    *)
-      echo Unknown Java version ${_JAVA}
-      exit 1
-      ;;
-  esac
-
-  echo ----
-  echo Source Java ${JAVA_VERSION} version
-  echo ----
-
-  case ${_TARGET_JAVA} in
-    1.7|1.8)
-      echo
-      echo ----
-      echo Target Java ${TARGET_JAVA} version
-      echo ----
-      TARGET_JAVA_VERSION=${_TARGET_JAVA}
-      ;;
-
-    *)
-      echo Unknown target Java version ${_TARGET_JAVA}
-      exit 1
-      ;;
-  esac
-
-  echo
-  echo ---- Java version -----
-  ${JAVA_HOME}/bin/java -version
-  echo ----
-}
-
-function printUsage() {
-  echo Usage:
-  echo "lib.sh --java=<1.7(default)|1.8> --target-java=<1.7(default)|1.8> --pom=<pom path> --no-build=<true|false(default)>"
-  echo "       --toolchain-home=<toolchain directory> --protobuf-home=<protobuf directory> --iterations=<number>"
-  echo "       --test-fork-count=<number> --test-fork-reuse=<true(default)|false>"
-  echo
-  echo "This script is intended to be invoked by one of the proxy links: build, test-all, test-code-coverage, test-flaky"
-  echo "and test-stable"
-  echo
-  echo "Assume that this script is running using Jenkins and with toolkit defining the following environment variables"
-  echo "- ANT_1_8_1_HOME"
-  echo "- MAVEN_3_0_HOME"
-  echo "- JAVA_7_HOME"
-  echo "- JAVA_8_HOME (optional only needed when using Java 8)"
-  echo
-  echo "If WORKSPACE is not defined by environment, the current working directory is assumed as the WORKSPACE.
-  echo "The result of parsing arguments is that the following envionment variables will be assigned
-  echo "- POM -- the POM that will be used to drive build/testing
-  echo "- JAVA -- the Java source version
-  echo "- TARGET_JAVA -- the Java target byte code version"
-  echo "- JAVA_HOME -- the home directory of the choosen Java"
-  echo "- MAVEN_FLAGS -- the Maven flags, options and properties"
-  echo "- JAVA_OPTS -- Java flags"
-  echo "- MAVEN_OPTS -- Maven options"
-  echo
-  echo "Optionally the following variables could be set"
-  echo "- TEST_ITERATIONS -- the number of times flaky tests should be executed"
-  echo "- NO_BUILD -- iff set to true no pre-build will be performed"
-}
-
-# Assume that this script is running using Jenkins and with toolkit defining the following environment variables
-# - ANT_1_8_1_HOME
-# - MAVEN_3_0_HOME
-# - JAVA_7_HOME
-# - JAVA_8_HOME
-#
-# If WORKSPACE is not defined by environment, the current working directory is assumed as the WORKSPACE.
-# The result of parsing arguments is that the following envionment variables will be assigned
-# - POM -- the POM that will be used to drive build/testing
-# - JAVA -- the Java source version
-# - TARGET_JAVA -- the Java target byte code version
-# - JAVA_HOME -- the home directory of the choosen Java
-# - MAVEN_FLAGS -- the Maven flags, options and properties
-# - JAVA_OPTS -- Java flags
-# - MAVEN_OPTS -- Maven options
-#
-# Optionally the following variables could be set
-# - ITERATIONS -- the number of times flaky tests should be executed
-# - NO_BUILD -- iff set to true no pre-build will be performed
-function initialize() {
-
-  # Set default values
-  POM=pom.xml
-  TEST_FORK_COUNT=1
-  TEST_REUSE_FORKS=true
-  JAVA=1.7
-  TARGET_JAVA=${JAVA}
-  # end default values
-
-  if [[ -z $ANT_1_8_1_HOME ]]; then
-    echo ANT_1_8_1_HOME is not set
-    exit 1
-  fi
-  ANT_HOME=$ANT_1_8_1_HOME
-
-  if [[ -z $MAVEN_3_0_HOME ]]; then
-    echo MAVEN_3_0_HOME is not set
-    exit 1
-  fi
-  MAVEN_HOME=$MAVEN_3_0_HOME
-
-  for arg in "$@"
-  do
-  case ${arg} in
-    --java=*)
-      JAVA="${arg#*=}"
-      shift
-      ;;
-
-    --target-java=*)
-      TARGET_JAVA="${arg#*=}"
-      shift
-      ;;
-
-    --pom=*|-p=*)
-      POM="${arg#*=}"
-      shift
-      ;;
-
-    --test-iterations=*|-i=*)
-      TEST_ITERATIONS="${arg#*=}"
-      shift
-      ;;
-
-    --no-build=*)
-      NO_BUILD="${arg#*=}"
-      ;;
-
-    --no-build)
-      export NO_BUILD=true
-      ;;
-
-    --test-fork-count=*)
-      TEST_FORK_COUNT="${arg#*=}"
-      shift
-      ;;
-
-    --test-reuse-forks=*|--test-reuse-fork=*)
-      TEST_REUSE_FORKS="${arg#*=}"
-      shift
-      ;;
-
-    --protobuf-home=*|--pb-home=*)
-      PROTOBUF_HOME="${arg#*=}"
-      shift
-      ;;
-
-   --toolchain-home=*|--tc-home=*)
-      TOOLCHAIN_HOME="${arg#*=}"
-      shift
-      ;;
-
-    --help|-h)
-      printUsage
-      exit 0
-      ;;
-
-    --function=*)
-      FUNCTION="${arg#*=}"
-      shift
-      ;;
-
-    *)
-      echo Unknown flag ${arg}
-      ;;
-  esac
-  done
-
-  if [[ "${FUNCTION}" != "test-flaky" && ${TEST_ITERATIONS} ]]; then
-    echo ${FUNCTION} cannot use --test-iterations, repetitive testing only works with test-flaky
-    exit 1
-  fi
-
-  setupJava ${JAVA} ${TARGET_JAVA}
-  export PATH=${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${ANT_HOME}/bin:${PATH}
-
-  if [[ -z "$WORKSPACE" ]]; then
-    export WORKSPACE=`pwd`
-  fi
-
-  MAVEN_FLAGS="-Pnative -Drequire.fuse -Drequire.snappy -Dmaven.repo.local=$WORKSPACE/.m2 -DjavaVersion=$JAVA_VERSION -DtargetJavaVersion=$TARGET_JAVA_VERSION -Dmaven.test.failure.ignore=true -Dtest.fork.count=${TEST_FORK_COUNT} -Dtest.fork.reuse=${TEST_REUSE_FORKS}"
-
-  if [[ "${PROTOBUF_HOME}" ]]; then
-    MAVEN_FLAGS="${MAVEN_FLAGS} -Dcdh.protobuf.home=${PROTOBUF_HOME}"
-  fi
-
-  if [[ "${TOOLCHAIN_HOME}" ]]; then
-    MAVEN_FLAGS="${MAVEN_FLAGS} -Dcdh.toolchain.home=${TOOLCHAIN_HOME}"
-  fi
-
-}
-
-################################### Main section ###################################
-
-CLOUDERA_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
-NAME=`basename $0`
-initialize $@ --function=${NAME}
-
-pushd `pwd` >> /dev/null
-cd ${CLOUDERA_DIR}/..
-
-case ${NAME} in
-  build)
-    build pom.xml "${MAVEN_FLAGS}" ${CODE_COVERAGE} false
-    ;;
-
-  test-all)
-    build pom.xml "${MAVEN_FLAGS}" false ${NO_BUILD}
-    runAllTests ${POM} "${MAVEN_FLAGS}"
-    ;;
-
-  test-code-coverage)
-    build pom.xml "${MAVEN_FLAGS}" true ${NO_BUILD}
-    runCodeCoverage ${POM} "${MAVEN_FLAGS}" "${CLOUDERA_DIR}/excludes.txt"
-    ;;
-
-  test-flaky)
-    build pom.xml "${MAVEN_FLAGS}" false ${NO_BUILD}
-    runFlakyTests ${POM} "${MAVEN_FLAGS}" "${CLOUDERA_DIR}/excludes.txt" ${TEST_ITERATIONS}
-    ;;
-
-  test-stable)
-    build pom.xml "${MAVEN_FLAGS}" false ${NO_BUILD}
-    runStableTests ${POM} "${MAVEN_FLAGS}" "${CLOUDERA_DIR}/excludes.txt"
-    ;;
-
-  *)
-    echo Do not know how to handle ${NAME}
-esac
-
-popd >> /dev/null
diff --git a/cloudera/post_commit_hook.sh b/cloudera/post_commit_hook.sh
deleted file mode 100644
index 803a880..0000000
--- a/cloudera/post_commit_hook.sh
+++ /dev/null
@@ -1,7 +0,0 @@
-#!/bin/bash
-set -xe
-
-DIR="$( cd $( dirname $( dirname ${BASH_SOURCE[0]} ) ) && pwd )"
-cd $DIR
-
-$DIR/cloudera/build
diff --git a/cloudera/post_commit_hook.sh.bak b/cloudera/post_commit_hook.sh.bak
new file mode 100644
index 0000000..1c64900
--- /dev/null
+++ b/cloudera/post_commit_hook.sh.bak
@@ -0,0 +1,29 @@
+#!/bin/bash
+set -xe
+
+SCRIPTS="jenkins-job-scripts"
+DIR="$( cd $( dirname $( dirname ${BASH_SOURCE[0]} ) ) && pwd )"
+cd $DIR
+
+if [[ -d $SCRIPTS ]]; then
+    echo "Cleaning up remnants from a previous run"
+    rm -rf $SCRIPTS
+fi
+
+# Clone the jenkins script repo
+git clone --depth 1 git://github.mtv.cloudera.com/CDH/$SCRIPTS.git $SCRIPTS || true
+
+# Fetch the right branch
+cd $SCRIPTS
+git fetch --depth 1 origin
+git checkout -f origin/master
+git ls-tree -r HEAD
+cd ..
+
+# Run the build and tests
+export CONF_NAME=CDH5-Hadoop-2.6.0
+./jenkins-job-scripts/run.sh
+
+if [[ -d $SCRIPTS ]]; then
+    rm -rf $SCRIPTS
+fi
diff --git a/cloudera/pre_commit_hook.sh b/cloudera/pre_commit_hook.sh
index 803a880..f7048a8 100755
--- a/cloudera/pre_commit_hook.sh
+++ b/cloudera/pre_commit_hook.sh
@@ -1,7 +1,28 @@
 #!/bin/bash
 set -xe
 
+SCRIPTS="jenkins-job-scripts"
 DIR="$( cd $( dirname $( dirname ${BASH_SOURCE[0]} ) ) && pwd )"
 cd $DIR
 
-$DIR/cloudera/build
+if [[ -d $SCRIPTS ]]; then
+    echo "Cleaning up remnants from a previous run"
+    rm -rf $SCRIPTS
+fi
+
+# Clone the jenkins script repo
+git clone --depth 1 git://github.mtv.cloudera.com/CDH/$SCRIPTS.git $SCRIPTS || true
+
+# Fetch the right branch
+cd $SCRIPTS
+git fetch --depth 1 origin
+git checkout -f origin/master
+git ls-tree -r HEAD
+cd ..
+
+# Run the build and tests
+./jenkins-job-scripts/run_precommit.sh
+
+if [[ -d $SCRIPTS ]]; then
+    rm -rf $SCRIPTS
+fi
diff --git a/cloudera/test-all.sh b/cloudera/test-all.sh
deleted file mode 100644
index f1f641a..0000000
--- a/cloudera/test-all.sh
+++ /dev/null
@@ -1 +0,0 @@
-#!/usr/bin/env bash
diff --git a/cloudera/test-code-coverage.sh b/cloudera/test-code-coverage.sh
deleted file mode 100644
index f1f641a..0000000
--- a/cloudera/test-code-coverage.sh
+++ /dev/null
@@ -1 +0,0 @@
-#!/usr/bin/env bash
diff --git a/cloudera/test-flaky.sh b/cloudera/test-flaky.sh
deleted file mode 100644
index f1f641a..0000000
--- a/cloudera/test-flaky.sh
+++ /dev/null
@@ -1 +0,0 @@
-#!/usr/bin/env bash
diff --git a/cloudera/test-info.json b/cloudera/test-info.json
deleted file mode 100644
index abd1470..0000000
--- a/cloudera/test-info.json
+++ /dev/null
@@ -1,41 +0,0 @@
-{
-  "test_info": {
-    "tests": [
-      {
-        "test_pattern": "org.hadoop.yarn.*",
-        "components": [
-          "Yarn"
-        ]
-      },
-      {
-        "test_pattern": "org.hadoop.hdfs.*",
-        "components": [
-          "HDFS"
-        ]
-      },
-      {
-        "test_pattern": "org.hadoop.mapred.*",
-        "components": [
-          "MapReduce"
-        ]
-      }
-    ],
-    "product": "CDH",
-    "release": "5.7.0",
-    "releases": [
-      "CDH5.7"
-    ],
-    "labels": [
-      "auto-jira",
-      "hadoop"
-    ],
-    "components": [
-      "Common"
-    ],
-    "jira-project": "CDH",
-    "test_framework": "surefire",
-    "email_threshold": 0.2,
-    "email_to": "chelin@cloudera.com",
-    "modified_threshold": 7
-  }
-}
diff --git a/cloudera/test-stable.sh b/cloudera/test-stable.sh
deleted file mode 100644
index f1f641a..0000000
--- a/cloudera/test-stable.sh
+++ /dev/null
@@ -1 +0,0 @@
-#!/usr/bin/env bash
diff --git a/hadoop-project/pom.xml b/hadoop-project/pom.xml
index 2487b25..2676880 100644
--- a/hadoop-project/pom.xml
+++ b/hadoop-project/pom.xml
@@ -12,8 +12,8 @@
   See the License for the specific language governing permissions and
   limitations under the License. See accompanying LICENSE file.
 -->
-<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-  xmlns="http://maven.apache.org/POM/4.0.0"
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                       http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
@@ -68,7 +68,7 @@
     <!-- ProtocolBuffer version, used to verify the protoc version and -->
     <!-- define the protobuf JAR version                               -->
     <protobuf.version>${cdh.protobuf.version}</protobuf.version>
-    <protoc.path>${cdh.protobuf.path}</protoc.path>
+    <protoc.path>${env.HADOOP_PROTOC_CDH5_PATH}</protoc.path>
 
     <zookeeper.version>3.4.6</zookeeper.version>
     <curator.version>2.7.1</curator.version>
@@ -89,7 +89,7 @@
 
     <!-- Plugin versions and config -->
     <maven-surefire-plugin.argLine>-Xmx4096m -XX:MaxPermSize=768m -XX:+HeapDumpOnOutOfMemoryError</maven-surefire-plugin.argLine>
-    <maven-surefire-plugin.version>${cdh.surefire.version}</maven-surefire-plugin.version>
+    <maven-surefire-plugin.version>2.17</maven-surefire-plugin.version>
     <maven-surefire-report-plugin.version>${maven-surefire-plugin.version}</maven-surefire-report-plugin.version>
     <maven-failsafe-plugin.version>${maven-surefire-plugin.version}</maven-failsafe-plugin.version>
   </properties>
-- 
1.7.9.5

