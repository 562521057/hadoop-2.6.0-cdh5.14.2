From fda3d9a7f8284794f7994dcc152892a144895cd3 Mon Sep 17 00:00:00 2001
From: Daniel Templeton <daniel@cloudera.com>
Date: Mon, 11 Jul 2016 18:33:13 -0700
Subject: [PATCH 1664/2748] Revert "YARN-4321. Incessant retries if
 NoAuthException is thrown by Zookeeper in non HA
 mode.  Contributed by Varun Saxena"

This reverts commit 35dda9e3ba8fbe255bd82df9e93d82915ba0f953.

Conflicts:
	hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/TestZKRMStateStore.java

Change-Id: I286e8fc926d6f120b373a453ef7c4b387fc551d4
(cherry picked from commit a34c97e1ab2c0ecac3d2a753c9ff874a5abda4d7)
(cherry picked from commit 715acd97a79725b190ecfadde8aa234b2351a9dd)
---
 .../resourcemanager/recovery/ZKRMStateStore.java   |    2 -
 .../recovery/TestZKRMStateStore.java               |   42 ++------------------
 2 files changed, 4 insertions(+), 40 deletions(-)

diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java
index 21830d1..0f0b636 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java
@@ -1187,8 +1187,6 @@ T runWithRetries() throws Exception {
             // another RM becoming active. Even if not,
             // it is safer to assume we have been fenced
             throw new StoreFencedException();
-          } else {
-            throw nae;
           }
         } catch (KeeperException ke) {
           if (ke.code() == Code.NODEEXISTS) {
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/TestZKRMStateStore.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/TestZKRMStateStore.java
index 6df8c24..f15cf90 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/TestZKRMStateStore.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/TestZKRMStateStore.java
@@ -19,12 +19,8 @@
 package org.apache.hadoop.yarn.server.resourcemanager.recovery;
 
 import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
-import static org.mockito.Mockito.doThrow;
 import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.spy;
 import static org.mockito.Mockito.when;
 
 import java.io.IOException;
@@ -38,7 +34,6 @@
 import org.apache.hadoop.ha.HAServiceProtocol;
 import org.apache.hadoop.ha.HAServiceProtocol.StateChangeRequestInfo;
 import org.apache.hadoop.service.Service;
-import org.apache.hadoop.service.ServiceStateException;
 import org.apache.hadoop.yarn.api.records.ApplicationAttemptId;
 import org.apache.hadoop.yarn.api.records.ApplicationId;
 import org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext;
@@ -80,7 +75,7 @@
 
     ZooKeeper client;
     TestZKRMStateStoreInternal store;
-    String workingZnode =  "/jira/issue/3077/rmstore";
+    String workingZnode;
 
     class TestZKRMStateStoreInternal extends ZKRMStateStore {
 
@@ -110,27 +105,16 @@ public String getAppNode(String appId) {
       }
     }
 
-    public RMStateStore getRMStateStore(ZooKeeper zk) throws Exception {
+    public RMStateStore getRMStateStore() throws Exception {
       YarnConfiguration conf = new YarnConfiguration();
+      workingZnode = "/jira/issue/3077/rmstore";
       conf.set(YarnConfiguration.RM_ZK_ADDRESS, hostPort);
       conf.set(YarnConfiguration.ZK_RM_STATE_STORE_PARENT_PATH, workingZnode);
-      if (null == zk) {
-        this.client = createClient();
-      } else {
-        this.client = zk;
-      }
+      this.client = createClient();
       this.store = new TestZKRMStateStoreInternal(conf, workingZnode);
       return this.store;
     }
 
-    public String getWorkingZNode() {
-      return workingZnode;
-    }
-
-    public RMStateStore getRMStateStore() throws Exception {
-      return getRMStateStore(null);
-    }
-
     @Override
     public boolean isFinalStateValid() throws Exception {
       List<String> nodes = client.getChildren(store.znodeWorkingPath, false);
@@ -381,24 +365,6 @@ public void testDuplicateRMAppDeletion() throws Exception {
   }
   
   @Test
-  public void testNoAuthExceptionInNonHAMode() throws Exception {
-    TestZKRMStateStoreTester zkTester = new TestZKRMStateStoreTester();
-    String appRoot = zkTester.getWorkingZNode() + "/ZKRMStateRoot/RMAppRoot" ;
-    ZooKeeper zk = spy(createClient());
-    doThrow(new KeeperException.NoAuthException()).when(zk).
-        create(appRoot, null, RMZKUtils.getZKAcls(new Configuration()),
-            CreateMode.PERSISTENT);
-    try {
-      zkTester.getRMStateStore(zk);
-      fail("Expected exception to be thrown");
-    } catch(ServiceStateException e) {
-      assertNotNull(e.getCause());
-      assertTrue("Expected NoAuthException",
-          e.getCause() instanceof KeeperException.NoAuthException);
-    }
-  }
-
-  @Test
   public void testFencedState() throws Exception {
     TestZKRMStateStoreTester zkTester = new TestZKRMStateStoreTester();
 	RMStateStore store = zkTester.getRMStateStore();
-- 
1.7.9.5

