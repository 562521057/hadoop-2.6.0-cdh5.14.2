From 0e0b0c7f0bc067e6ea344188159f0edda60e6d12 Mon Sep 17 00:00:00 2001
From: Daniel Templeton <templedf@apache.org>
Date: Fri, 24 Mar 2017 14:01:11 -0700
Subject: [PATCH 2434/2748] YARN-6334. TestRMFailover#testAutomaticFailover
 always passes even when it should fail
 (Contributed by Yufei Gu via Daniel Templeton)

(cherry picked from commit 6209e4c913041b258aa2d4a08fd772f6ba31b789)

Conflicts:
	hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/TestRMFailover.java

Detailed Conflicts:
	TestRMFailover: trivial import conflict

Change-Id: I30c785c4f8ee44e5d48d2b74b2d0b257bcbe36d1
---
 .../apache/hadoop/yarn/client/TestRMFailover.java  |   40 +++++++++++---------
 1 file changed, 22 insertions(+), 18 deletions(-)

diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/TestRMFailover.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/TestRMFailover.java
index d3ea447d..bbd5958 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/TestRMFailover.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/test/java/org/apache/hadoop/yarn/client/TestRMFailover.java
@@ -30,6 +30,8 @@
 import java.io.IOException;
 import java.net.HttpURLConnection;
 import java.net.URL;
+import java.util.concurrent.TimeoutException;
+
 import javax.servlet.http.HttpServletResponse;
 
 import org.apache.commons.logging.Log;
@@ -39,6 +41,7 @@
 import org.apache.hadoop.ha.HAServiceProtocol;
 import org.apache.hadoop.ha.HAServiceProtocol.HAServiceState;
 import org.apache.hadoop.service.Service.STATE;
+import org.apache.hadoop.test.GenericTestUtils;
 import org.apache.hadoop.util.ExitUtil;
 import org.apache.hadoop.yarn.api.records.ApplicationId;
 import org.apache.hadoop.yarn.client.api.YarnClient;
@@ -59,6 +62,8 @@
 import org.junit.Ignore;
 import org.junit.Test;
 
+import com.google.common.base.Supplier;
+
 public class TestRMFailover extends ClientBaseWithFixes {
   private static final Log LOG =
       LogFactory.getLog(TestRMFailover.class.getName());
@@ -180,6 +185,21 @@ public void testExplicitFailover()
     verifyConnections();
   }
 
+  private void verifyRMTransitionToStandby(final ResourceManager rm)
+      throws InterruptedException {
+    try {
+      GenericTestUtils.waitFor(new Supplier<Boolean>() {
+        @Override
+        public Boolean get() {
+          return rm.getRMContext().getHAServiceState() ==
+              HAServiceState.STANDBY;
+        }
+      }, 100, 20000);
+    } catch (TimeoutException e) {
+      fail("RM didn't transition to Standby.");
+    }
+  }
+
   @Test
   public void testAutomaticFailover()
       throws YarnException, InterruptedException, IOException {
@@ -203,15 +223,7 @@ public void testAutomaticFailover()
     ResourceManager rm = cluster.getResourceManager(
         cluster.getActiveRMIndex());
     rm.handleTransitionToStandByInNewThread();
-    int maxWaitingAttempts = 2000;
-    while (maxWaitingAttempts-- > 0 ) {
-      if (rm.getRMContext().getHAServiceState() == HAServiceState.STANDBY) {
-        break;
-      }
-      Thread.sleep(1);
-    }
-    Assert.assertFalse("RM didn't transition to Standby ",
-        maxWaitingAttempts == 0);
+    verifyRMTransitionToStandby(rm);
     verifyConnections();
   }
 
@@ -414,15 +426,7 @@ public void run() {
     testThread.start();
     testThread.join();
 
-    int maxWaitingAttempts = 2000;
-    while (maxWaitingAttempts-- > 0) {
-      if (resourceManager.getRMContext().getHAServiceState()
-          == HAServiceState.STANDBY) {
-        break;
-      }
-      Thread.sleep(1);
-    }
-    assertFalse("RM didn't transition to Standby ", maxWaitingAttempts < 0);
+    verifyRMTransitionToStandby(resourceManager);
   }
 
   /**
-- 
1.7.9.5

