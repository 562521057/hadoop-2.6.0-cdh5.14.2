From 77e25e770bd277f218b8b6149beb9e3d75ee431c Mon Sep 17 00:00:00 2001
From: Yufei Gu <yufei.gu@cloudera.com>
Date: Fri, 19 May 2017 15:45:52 -0700
Subject: [PATCH 2454/2748] YARN-6249. TestFairSchedulerPreemption fails
 inconsistently. (Tao Jie via Yufei Gu)

(cherry picked from commit 66bba8c0244e5b17d496e2fa3999991705c11bc7)
(cherry picked from commit 50e263a3162292e27f45ecbbfd3c6d89445ae08e)

Change-Id: I0639a2ddbf2a9d6c436a0b256bd6284f376f38d9
---
 .../fair/TestFairSchedulerPreemption.java          |    4 ++++
 1 file changed, 4 insertions(+)

diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairSchedulerPreemption.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairSchedulerPreemption.java
index a966d20..a9eb24c 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairSchedulerPreemption.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/TestFairSchedulerPreemption.java
@@ -24,6 +24,7 @@
 import org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainer;
 import org.apache.hadoop.yarn.server.resourcemanager.rmcontainer.RMContainerImpl;
 import org.apache.hadoop.yarn.util.ControlledClock;
+import org.apache.hadoop.yarn.util.SystemClock;
 import org.junit.After;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
@@ -188,6 +189,9 @@ private void writeResourceParams(PrintWriter out) {
   private void setupCluster() throws IOException {
     resourceManager = new MockRM(conf);
     scheduler = (FairScheduler) resourceManager.getResourceScheduler();
+    // YARN-6249, FSLeafQueue#lastTimeAtMinShare is initialized to the time in
+    // the real world, so we should keep the clock up with it.
+    clock.setTime(System.currentTimeMillis());
     scheduler.setClock(clock);
     resourceManager.start();
 
-- 
1.7.9.5

