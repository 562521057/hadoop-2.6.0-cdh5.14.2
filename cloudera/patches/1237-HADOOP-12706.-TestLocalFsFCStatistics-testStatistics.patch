From 8c926b8c1bff43d4d43aeee8ffe04013e404a78d Mon Sep 17 00:00:00 2001
From: Jason Lowe <jlowe@apache.org>
Date: Thu, 14 Jan 2016 23:53:02 +0000
Subject: [PATCH 1237/2748] HADOOP-12706.
 TestLocalFsFCStatistics#testStatisticsThreadLocalDataCleanUp
 times out occasionally. Contributed by Sangjin
 Lee and Colin Patrick McCabe (cherry picked from
 commit cdf88952599a43b1ef5adda792bfb195c7529fad)

(cherry picked from commit 9b26ee836c33e1180e44290c97a2704b3d0e0dc6)

Change-Id: I089affc6c7d36c350e0ac47fa70d6bc4a0bd639f
---
 .../org/apache/hadoop/fs/FCStatisticsBaseTest.java |   21 +++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FCStatisticsBaseTest.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FCStatisticsBaseTest.java
index 3e33362..2e208d2 100644
--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FCStatisticsBaseTest.java
+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FCStatisticsBaseTest.java
@@ -32,6 +32,8 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.fs.FileSystem.Statistics;
 import org.apache.hadoop.test.GenericTestUtils;
 import org.junit.Assert;
@@ -46,6 +48,8 @@
  * </p>
  */
 public abstract class FCStatisticsBaseTest {
+  private static final Log LOG = LogFactory.getLog(FCStatisticsBaseTest.class);
+
   static protected int blockSize = 512;
   static protected int numBlocks = 1;
   
@@ -110,7 +114,7 @@ public void testStatistics() throws IOException, URISyntaxException {
     fc.delete(filePath, true);
   }
 
-  @Test(timeout=60000)
+  @Test(timeout=70000)
   public void testStatisticsThreadLocalDataCleanUp() throws Exception {
     final Statistics stats = new Statistics("test");
     // create a small thread pool to test the statistics
@@ -137,17 +141,24 @@ public Boolean call() {
     es.shutdownNow();
     es.awaitTermination(1, TimeUnit.MINUTES);
     es = null;
-    System.gc();
+    System.gc(); // force GC to garbage collect threads
 
-    // wait for up to 10 seconds
+    // wait for up to 60 seconds
     GenericTestUtils.waitFor(new Supplier<Boolean>() {
           @Override
           public Boolean get() {
             int size = stats.getAllThreadLocalDataSize();
             allDataSize.set(size);
-            return size == 0;
+            if (size == 0) {
+              return true;
+            }
+            LOG.warn("not all references have been cleaned up; still " +
+                allDataSize.get() + " references left");
+            LOG.warn("triggering another GC");
+            System.gc();
+            return false;
           }
-        }, 1000, 10*1000);
+        }, 500, 60*1000);
     Assert.assertEquals(0, allDataSize.get());
     Assert.assertEquals(size, stats.getReadOps());
   }
-- 
1.7.9.5

