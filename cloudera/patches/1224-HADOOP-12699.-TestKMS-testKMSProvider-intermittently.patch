From 683ff19011c959ca818c089bd87c94094724866c Mon Sep 17 00:00:00 2001
From: Andrew Wang <wang@apache.org>
Date: Thu, 11 Feb 2016 17:20:10 -0800
Subject: [PATCH 1224/2748] HADOOP-12699. TestKMS#testKMSProvider
 intermittently fails during 'test rollover
 draining'. Contributed by Xiao Chen.

(cherry picked from commit 8fdef0bd9d1ece560ab4e1a1ec7fc77c46a034bb)
(cherry picked from commit fb57c01eaaf572dee59e91e75d59237cf540d6d1)

Conflicts:
	hadoop-common-project/hadoop-kms/src/site/markdown/index.md.vm

Change-Id: I39c6977771d0d4f1b53f6679e457e2115cb846e0
---
 ...agerKeyGeneratorKeyProviderCryptoExtension.java |   10 ++++++++++
 .../hadoop/crypto/key/kms/server/TestKMS.java      |   21 +++++++++++++++++---
 2 files changed, 28 insertions(+), 3 deletions(-)

diff --git a/hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/EagerKeyGeneratorKeyProviderCryptoExtension.java b/hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/EagerKeyGeneratorKeyProviderCryptoExtension.java
index 64af2b6..87f6209 100644
--- a/hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/EagerKeyGeneratorKeyProviderCryptoExtension.java
+++ b/hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/EagerKeyGeneratorKeyProviderCryptoExtension.java
@@ -153,6 +153,16 @@ public EagerKeyGeneratorKeyProviderCryptoExtension(Configuration conf,
         new CryptoExtension(conf, keyProviderCryptoExtension));
   }
 
+  /**
+   * Roll a new version of the given key generating the material for it.
+   * <p>
+   * Due to the caching on the ValueQueue, even after a rollNewVersion call,
+   * {@link #generateEncryptedKey(String)} may still return an old key - even
+   * when we drain the queue here, the async thread may later fill in old keys.
+   * This is acceptable since old version keys are still able to decrypt, and
+   * client shall make no assumptions that it will get a new versioned key
+   * after rollNewVersion.
+   */
   @Override
   public KeyVersion rollNewVersion(String name)
       throws NoSuchAlgorithmException, IOException {
diff --git a/hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java b/hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
index 7131b7c..9b75ee1 100644
--- a/hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
+++ b/hadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java
@@ -29,6 +29,7 @@
 import org.apache.hadoop.crypto.key.KeyProviderDelegationTokenExtension;
 import org.apache.hadoop.crypto.key.kms.KMSClientProvider;
 import org.apache.hadoop.crypto.key.kms.LoadBalancingKMSClientProvider;
+import org.apache.hadoop.fs.CommonConfigurationKeysPublic;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.io.Text;
 import org.apache.hadoop.minikdc.MiniKdc;
@@ -630,10 +631,24 @@ public Void call() throws Exception {
 
         EncryptedKeyVersion ekv1 = kpce.generateEncryptedKey("k6");
         kpce.rollNewVersion("k6");
-        EncryptedKeyVersion ekv2 = kpce.generateEncryptedKey("k6");
-        Assert.assertNotEquals(ekv1.getEncryptionKeyVersionName(),
-            ekv2.getEncryptionKeyVersionName());
 
+        /**
+         * due to the cache on the server side, client may get old keys.
+         * @see EagerKeyGeneratorKeyProviderCryptoExtension#rollNewVersion(String)
+         */
+        boolean rollSucceeded = false;
+        for (int i = 0; i <= EagerKeyGeneratorKeyProviderCryptoExtension
+            .KMS_KEY_CACHE_SIZE_DEFAULT + CommonConfigurationKeysPublic.
+            KMS_CLIENT_ENC_KEY_CACHE_SIZE_DEFAULT; ++i) {
+          EncryptedKeyVersion ekv2 = kpce.generateEncryptedKey("k6");
+          if (!(ekv1.getEncryptionKeyVersionName()
+              .equals(ekv2.getEncryptionKeyVersionName()))) {
+            rollSucceeded = true;
+            break;
+          }
+        }
+        Assert.assertTrue("rollover did not generate a new key even after"
+            + " queue is drained", rollSucceeded);
         return null;
       }
     });
-- 
1.7.9.5

