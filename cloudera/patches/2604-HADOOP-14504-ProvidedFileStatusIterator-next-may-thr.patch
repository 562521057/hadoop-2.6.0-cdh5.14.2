From 78cadf5292b2355cb3963983b1dff22a2ee56186 Mon Sep 17 00:00:00 2001
From: Aaron Fabbri <fabbri@apache.org>
Date: Thu, 8 Jun 2017 15:55:20 -0700
Subject: [PATCH 2604/2748] HADOOP-14504 ProvidedFileStatusIterator#next() may
 throw IndexOutOfBoundsException (Aaron Fabbri)

(cherry picked from commit 6a06ed834bcceae7b65305d49b65c4bf6a7438ad)

Change-Id: I6beb045bdc640f133a889b67bf14fb75947b9cfe
---
 .../java/org/apache/hadoop/fs/s3a/Listing.java     |    3 +++
 .../java/org/apache/hadoop/fs/s3a/TestListing.java |   24 ++++++++++++++++++++
 2 files changed, 27 insertions(+)

diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Listing.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Listing.java
index b45fc43..5299c6c 100644
--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Listing.java
+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Listing.java
@@ -271,6 +271,9 @@ public boolean hasNext() throws IOException {
 
     @Override
     public FileStatus next() throws IOException {
+      if (!hasNext()) {
+        throw new NoSuchElementException();
+      }
       return filteredStatusList.get(index++);
     }
   }
diff --git a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/TestListing.java b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/TestListing.java
index 43eb2c0..e647327 100644
--- a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/TestListing.java
+++ b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/TestListing.java
@@ -29,8 +29,12 @@
 import java.util.Collection;
 import java.util.HashSet;
 import java.util.Iterator;
+import java.util.NoSuchElementException;
 import java.util.Set;
 
+import static org.apache.hadoop.fs.s3a.Listing.ACCEPT_ALL;
+import static org.apache.hadoop.fs.s3a.Listing.ProvidedFileStatusIterator;
+
 /**
  * Place for the S3A listing classes; keeps all the small classes under control.
  */
@@ -91,4 +95,24 @@ public void testTombstoneReconcilingIterator() throws Exception {
     }
     Assert.assertTrue(actualPaths.equals(expectedPaths));
   }
+
+  @Test
+  public void testProvidedFileStatusIteratorEnd() throws Exception {
+    FileStatus[] statuses = {
+        new FileStatus(100, false, 1, 8192, 0, new Path("s3a://blah/blah"))
+    };
+    ProvidedFileStatusIterator it = new ProvidedFileStatusIterator(statuses,
+        ACCEPT_ALL, new Listing.AcceptAllButS3nDirs());
+
+    Assert.assertTrue("hasNext() should return true first time", it.hasNext());
+    Assert.assertNotNull("first element should not be null", it.next());
+    Assert.assertFalse("hasNext() should now be false", it.hasNext());
+    try {
+      it.next();
+      Assert.fail("next() should have thrown exception");
+    } catch (NoSuchElementException e) {
+      // Correct behavior.  Any other exceptions are propagated as failure.
+      return;
+    }
+  }
 }
-- 
1.7.9.5

