From 5ca0834d663ca261afde016d50e5c8f2c592923f Mon Sep 17 00:00:00 2001
From: Wei-Chiu Chuang <weichiu@cloudera.com>
Date: Wed, 4 May 2016 12:10:40 -0700
Subject: [PATCH 1508/2748] HDFS-9478. Reason for failing ipc.FairCallQueue
 contruction should be thrown. (Contributed by
 Ajith S)

(cherry picked from commit 7f14dc3294dba7dd658fb2814fa3a599bd9dc0b0)

Change-Id: Iea957faed85b18103498b41fc5d7f1c02d114d12
---
 .../org/apache/hadoop/ipc/CallQueueManager.java    |   10 ++++++++
 .../apache/hadoop/ipc/TestCallQueueManager.java    |   25 ++++++++++++++++++++
 2 files changed, 35 insertions(+)

diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java
index 1568bd6..a2e14c1 100644
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java
@@ -19,6 +19,7 @@
 package org.apache.hadoop.ipc;
 
 import java.lang.reflect.Constructor;
+import java.lang.reflect.InvocationTargetException;
 import java.util.concurrent.BlockingQueue;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicReference;
@@ -66,6 +67,9 @@ public CallQueueManager(Class<? extends BlockingQueue<E>> backingClass,
       return ctor.newInstance(maxLen, ns, conf);
     } catch (RuntimeException e) {
       throw e;
+    } catch (InvocationTargetException e) {
+      throw new RuntimeException(theClass.getName()
+          + " could not be constructed.", e.getCause());
     } catch (Exception e) {
     }
 
@@ -75,6 +79,9 @@ public CallQueueManager(Class<? extends BlockingQueue<E>> backingClass,
       return ctor.newInstance(maxLen);
     } catch (RuntimeException e) {
       throw e;
+    } catch (InvocationTargetException e) {
+      throw new RuntimeException(theClass.getName()
+          + " could not be constructed.", e.getCause());
     } catch (Exception e) {
     }
 
@@ -84,6 +91,9 @@ public CallQueueManager(Class<? extends BlockingQueue<E>> backingClass,
       return ctor.newInstance();
     } catch (RuntimeException e) {
       throw e;
+    } catch (InvocationTargetException e) {
+      throw new RuntimeException(theClass.getName()
+          + " could not be constructed.", e.getCause());
     } catch (Exception e) {
     }
 
diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestCallQueueManager.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestCallQueueManager.java
index 6e1838e..e981a67 100644
--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestCallQueueManager.java
+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/ipc/TestCallQueueManager.java
@@ -19,6 +19,8 @@
 package org.apache.hadoop.ipc;
 
 import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
 
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -219,4 +221,27 @@ public void testSwapUnderContention() throws InterruptedException {
 
     assertEquals(totalCallsConsumed, totalCallsCreated);
   }
+
+  public static class ExceptionFakeCall {
+
+    public ExceptionFakeCall() {
+      throw new IllegalArgumentException("Exception caused by constructor.!!");
+    }
+  }
+
+  private static final Class<? extends BlockingQueue<ExceptionFakeCall>> exceptionQueueClass = CallQueueManager
+      .convertQueueClass(ExceptionFakeCall.class, ExceptionFakeCall.class);
+
+  @Test
+  public void testInvocationException() throws InterruptedException {
+    try {
+      new CallQueueManager<ExceptionFakeCall>(exceptionQueueClass, false, 10,
+          "", null);
+      fail();
+    } catch (RuntimeException re) {
+      assertTrue(re.getCause() instanceof IllegalArgumentException);
+      assertEquals("Exception caused by constructor.!!", re.getCause()
+          .getMessage());
+    }
+  }
 }
\ No newline at end of file
-- 
1.7.9.5

