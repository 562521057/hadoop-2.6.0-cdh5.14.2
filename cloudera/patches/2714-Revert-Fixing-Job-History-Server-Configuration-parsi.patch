From ef09612129c2b89c3c1206a1cb8532f66af8c10f Mon Sep 17 00:00:00 2001
From: Gergo Repas <grepas@cloudera.com>
Date: Thu, 21 Dec 2017 06:45:01 -0700
Subject: [PATCH 2714/2748] Revert "Fixing Job History Server Configuration
 parsing. (Jason Lowe via asuresh)"

This reverts commit 10505cfb8586c1edbb45ecd5ebbeea0b273d0ea0.

Change-Id: I9962a7df23cc6477a2b543011b70dcb2dcd13131
---
 .../java/org/apache/hadoop/conf/Configuration.java |  121 ++++----------------
 .../hadoop/mapreduce/v2/hs/HistoryFileManager.java |    2 +-
 2 files changed, 21 insertions(+), 102 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
index 92491d9..bde2994 100644
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
@@ -84,7 +84,6 @@
 import org.apache.hadoop.io.Writable;
 import org.apache.hadoop.io.WritableUtils;
 import org.apache.hadoop.net.NetUtils;
-import org.apache.hadoop.security.UserGroupInformation;
 import org.apache.hadoop.security.alias.CredentialProvider;
 import org.apache.hadoop.security.alias.CredentialProvider.CredentialEntry;
 import org.apache.hadoop.security.alias.CredentialProviderFactory;
@@ -189,34 +188,19 @@
   private static final String DEFAULT_STRING_CHECK =
     "testingforemptydefaultvalue";
 
-  private static final String XINCLUDE_NS_URI =
-      "http://www.w3.org/2001/XInclude";
-
-  private static boolean restrictSystemPropsDefault = false;
-  private boolean restrictSystemProps = restrictSystemPropsDefault;
   private boolean allowNullValueProperties = false;
-
+  
   private static class Resource {
     private final Object resource;
     private final String name;
-    private final boolean restrictParser;
     
     public Resource(Object resource) {
       this(resource, resource.toString());
     }
-
-    public Resource(Object resource, boolean useRestrictedParser) {
-      this(resource, resource.toString(), useRestrictedParser);
-    }
-
+    
     public Resource(Object resource, String name) {
-      this(resource, name, getRestrictParserDefault(resource));
-    }
-
-    public Resource(Object resource, String name, boolean restrictParser) {
       this.resource = resource;
       this.name = name;
-      this.restrictParser = restrictParser;
     }
     
     public String getName(){
@@ -226,28 +210,11 @@ public String getName(){
     public Object getResource() {
       return resource;
     }
-
-    public boolean isParserRestricted() {
-      return restrictParser;
-    }
-
+    
     @Override
     public String toString() {
       return name;
     }
-
-    private static boolean getRestrictParserDefault(Object resource) {
-      if (resource instanceof String) {
-        return false;
-      }
-      UserGroupInformation user;
-      try {
-        user = UserGroupInformation.getCurrentUser();
-      } catch (IOException e) {
-        throw new RuntimeException("Unable to determine current user", e);
-      }
-      return user.getRealUser() != null;
-    }
   }
   
   /**
@@ -269,7 +236,7 @@ private static boolean getRestrictParserDefault(Object resource) {
       new ConcurrentHashMap<String, Boolean>());
   
   private boolean loadDefaults = true;
-
+  
   /**
    * Configuration objects
    */
@@ -761,7 +728,6 @@ public Configuration(Configuration other) {
        this.overlay = (Properties)other.overlay.clone();
      }
 
-     this.restrictSystemProps = other.restrictSystemProps;
      this.updatingResource = new ConcurrentHashMap<String, String[]>(
          other.updatingResource);
      this.finalParameters = Collections.newSetFromMap(
@@ -806,14 +772,6 @@ public static synchronized void addDefaultResource(String name) {
     }
   }
 
-  public static void setRestrictSystemPropertiesDefault(boolean val) {
-    restrictSystemPropsDefault = val;
-  }
-
-  public void setRestrictSystemProperties(boolean val) {
-    this.restrictSystemProps = val;
-  }
-
   /**
    * Add a configuration resource. 
    * 
@@ -827,10 +785,6 @@ public void addResource(String name) {
     addResourceObject(new Resource(name));
   }
 
-  public void addResource(String name, boolean restrictedParser) {
-    addResourceObject(new Resource(name, restrictedParser));
-  }
-
   /**
    * Add a configuration resource. 
    * 
@@ -845,10 +799,6 @@ public void addResource(URL url) {
     addResourceObject(new Resource(url));
   }
 
-  public void addResource(URL url, boolean restrictedParser) {
-    addResourceObject(new Resource(url, restrictedParser));
-  }
-
   /**
    * Add a configuration resource. 
    * 
@@ -863,10 +813,6 @@ public void addResource(Path file) {
     addResourceObject(new Resource(file));
   }
 
-  public void addResource(Path file, boolean restrictedParser) {
-    addResourceObject(new Resource(file, restrictedParser));
-  }
-
   /**
    * Add a configuration resource. 
    * 
@@ -884,10 +830,6 @@ public void addResource(InputStream in) {
     addResourceObject(new Resource(in));
   }
 
-  public void addResource(InputStream in, boolean restrictedParser) {
-    addResourceObject(new Resource(in, restrictedParser));
-  }
-
   /**
    * Add a configuration resource. 
    * 
@@ -901,12 +843,7 @@ public void addResource(InputStream in, boolean restrictedParser) {
   public void addResource(InputStream in, String name) {
     addResourceObject(new Resource(in, name));
   }
-
-  public void addResource(InputStream in, String name,
-      boolean restrictedParser) {
-    addResourceObject(new Resource(in, name, restrictedParser));
-  }
-
+  
   /**
    * Add a configuration resource.
    *
@@ -936,7 +873,6 @@ public synchronized void reloadConfiguration() {
   
   private synchronized void addResourceObject(Resource resource) {
     resources.add(resource);                      // add to resources
-    restrictSystemProps |= resource.isParserRestricted();
     reloadConfiguration();
   }
 
@@ -1035,12 +971,10 @@ private String substituteVars(String expr) {
       final String var = eval.substring(varBounds[SUB_START_IDX],
           varBounds[SUB_END_IDX]);
       String val = null;
-      if (!restrictSystemProps) {
-        try {
-          val = System.getProperty(var);
-        } catch (SecurityException se) {
-          LOG.warn("Unexpected SecurityException in Configuration", se);
-        }
+      try {
+        val = System.getProperty(var);
+      } catch(SecurityException se) {
+        LOG.warn("Unexpected SecurityException in Configuration", se);
       }
       if (val == null) {
         val = getRaw(var);
@@ -1091,10 +1025,6 @@ public void setAllowNullValueProperties( boolean val ) {
     this.allowNullValueProperties = val;
   }
 
-  public void setRestrictSystemProps(boolean val) {
-    this.restrictSystemProps = val;
-  }
-
   /**
    * Return existence of the <code>name</code> property, but only for
    * names which have no valid value, usually non-existent or commented
@@ -2650,12 +2580,12 @@ private void loadResources(Properties properties,
                              boolean quiet) {
     if(loadDefaults) {
       for (String resource : defaultResources) {
-        loadResource(properties, new Resource(resource, false), quiet);
+        loadResource(properties, new Resource(resource), quiet);
       }
     
       //support the hadoop-site.xml as a deprecated case
       if(getResource("hadoop-site.xml")!=null) {
-        loadResource(properties, new Resource("hadoop-site.xml", false), quiet);
+        loadResource(properties, new Resource("hadoop-site.xml"), quiet);
       }
     }
     
@@ -2680,16 +2610,13 @@ private Resource loadResource(Properties properties, Resource wrapper, boolean q
 
       //allow includes in the xml file
       docBuilderFactory.setNamespaceAware(true);
-      boolean useXInclude = !wrapper.isParserRestricted();
       try {
-        docBuilderFactory.setXIncludeAware(useXInclude);
+          docBuilderFactory.setXIncludeAware(true);
       } catch (UnsupportedOperationException e) {
-        LOG.error("Failed to set setXIncludeAware(" + useXInclude
-                + ") for parser " + docBuilderFactory, e);
-      }
-      if (wrapper.isParserRestricted()) {
-        docBuilderFactory.setFeature(
-            "http://apache.org/xml/features/disallow-doctype-decl", true);
+        LOG.error("Failed to set setXIncludeAware(true) for parser "
+                + docBuilderFactory
+                + ":" + e,
+                e);
       }
       DocumentBuilder builder = docBuilderFactory.newDocumentBuilder();
       Document doc = null;
@@ -2745,19 +2672,11 @@ private Resource loadResource(Properties properties, Resource wrapper, boolean q
           continue;
         Element prop = (Element)propNode;
         if ("configuration".equals(prop.getTagName())) {
-          loadResource(toAddTo,
-              new Resource(prop, name, wrapper.isParserRestricted()), quiet);
+          loadResource(toAddTo, new Resource(prop, name), quiet);
           continue;
         }
-        if (!"property".equals(prop.getTagName())) {
-          if (wrapper.isParserRestricted()
-              && XINCLUDE_NS_URI.equals(prop.getNamespaceURI())) {
-            throw new RuntimeException("Error parsing resource " + wrapper
-                + ": XInclude is not supported for restricted resources");
-          }
-          LOG.warn("Unexpected tag in conf file " + wrapper
-              + ": expected <property> but found <" + prop.getTagName() + ">");
-        }
+        if (!"property".equals(prop.getTagName()))
+          LOG.warn("bad conf file: element not <property>");
         NodeList fields = prop.getChildNodes();
         String attr = null;
         String value = null;
@@ -2803,7 +2722,7 @@ private Resource loadResource(Properties properties, Resource wrapper, boolean q
       
       if (returnCachedProperties) {
         overlay(properties, toAddTo);
-        return new Resource(toAddTo, name, wrapper.isParserRestricted());
+        return new Resource(toAddTo, name);
       }
       return null;
     } catch (IOException e) {
diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java
index 6bd36e2..80a3647 100644
--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java
+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java
@@ -511,7 +511,7 @@ public synchronized Path getConfFile() {
     public synchronized Configuration loadConfFile() throws IOException {
       FileContext fc = FileContext.getFileContext(confFile.toUri(), conf);
       Configuration jobConf = new Configuration(false);
-      jobConf.addResource(fc.open(confFile), confFile.toString(), true);
+      jobConf.addResource(fc.open(confFile), confFile.toString());
       return jobConf;
     }
 
-- 
1.7.9.5

