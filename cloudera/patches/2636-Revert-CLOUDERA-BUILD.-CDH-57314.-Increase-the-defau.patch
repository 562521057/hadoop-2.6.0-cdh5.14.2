From a6ed92e03018d1c503a8691044883eccdaf73c95 Mon Sep 17 00:00:00 2001
From: Xiao Chen <xiao@cloudera.com>
Date: Thu, 7 Sep 2017 23:19:20 -0700
Subject: [PATCH 2636/2748] Revert "CLOUDERA-BUILD. CDH-57314. Increase the
 default number of retries in KMS clients."

This reverts commit 16aeff5dff4a29f082bf3443cd732f030b505467.

Change-Id: I38e9edf5576e7c46d5135edaac984e9ab3a008df
---
 .../key/kms/LoadBalancingKMSClientProvider.java    |    3 +--
 .../hadoop/fs/CommonConfigurationKeysPublic.java   |    3 ---
 .../kms/TestLoadBalancingKMSClientProvider.java    |   11 ++++-------
 3 files changed, 5 insertions(+), 12 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java
index 896b7a9..2070d56 100644
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java
@@ -88,8 +88,7 @@ public LoadBalancingKMSClientProvider(KMSClientProvider[] providers,
     this.providers = providers;
     this.currentIdx = new AtomicInteger((int)(seed % providers.length));
     int maxNumRetries = conf.getInt(CommonConfigurationKeysPublic.
-            KMS_CLIENT_FAILOVER_MAX_RETRIES_KEY,
-        CommonConfigurationKeysPublic.KMS_CLIENT_FAILOVER_MAX_RETRIES_DEFAULT);
+        KMS_CLIENT_FAILOVER_MAX_RETRIES_KEY, providers.length);
     int sleepBaseMillis = conf.getInt(CommonConfigurationKeysPublic.
         KMS_CLIENT_FAILOVER_SLEEP_BASE_MILLIS_KEY,
         CommonConfigurationKeysPublic.
diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/CommonConfigurationKeysPublic.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/CommonConfigurationKeysPublic.java
index af4c488..798cfbb 100644
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/CommonConfigurationKeysPublic.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/CommonConfigurationKeysPublic.java
@@ -415,9 +415,6 @@
   public static final String KMS_CLIENT_FAILOVER_MAX_RETRIES_KEY =
       "hadoop.security.kms.client.failover.max.retries";
 
-  /** CLOUDERA-BUILD: default value of max_retreis. */
-  public static final int KMS_CLIENT_FAILOVER_MAX_RETRIES_DEFAULT = 15;
-
   /**
    * @see
    * <a href="{@docRoot}/../hadoop-project-dist/hadoop-common/core-default.xml">
diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/kms/TestLoadBalancingKMSClientProvider.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/kms/TestLoadBalancingKMSClientProvider.java
index 3903822..ed11d5d 100644
--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/kms/TestLoadBalancingKMSClientProvider.java
+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/crypto/key/kms/TestLoadBalancingKMSClientProvider.java
@@ -558,7 +558,8 @@ public void testClientRetriesSpecifiedNumberOfTimes() throws Exception {
   }
 
   /**
-   * CDH-57314 changed the default. Tests the new default number of retires.
+   * Tests whether retryPolicy retries number of times equals to number of
+   * providers if conf kms.client.failover.max.attempts is not set.
    * @throws Exception
    */
   @Test
@@ -582,14 +583,10 @@ public void testClientRetriesIfMaxAttemptsNotSet() throws Exception {
     } catch (Exception e) {
      assert (e instanceof ConnectTimeoutException);
     }
-    verify(p1, Mockito.atLeast(7)).createKey(Mockito.eq("test3"),
+    verify(p1, Mockito.times(2)).createKey(Mockito.eq("test3"),
             Mockito.any(Options.class));
-    verify(p1, Mockito.atMost(8)).createKey(Mockito.eq("test3"),
-        Mockito.any(Options.class));
-    verify(p2, Mockito.atLeast(7)).createKey(Mockito.eq("test3"),
+    verify(p2, Mockito.times(1)).createKey(Mockito.eq("test3"),
             Mockito.any(Options.class));
-    verify(p1, Mockito.atLeast(8)).createKey(Mockito.eq("test3"),
-        Mockito.any(Options.class));
   }
 
   /**
-- 
1.7.9.5

