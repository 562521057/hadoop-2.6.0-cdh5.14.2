From a29f679f27666eccada5fee6fe9591a35c226981 Mon Sep 17 00:00:00 2001
From: Sean Mackrory <sean@cloudera.com>
Date: Fri, 17 Feb 2017 16:16:04 -0700
Subject: [PATCH 2267/2748] Revert "CLOUDERA-BUILD. Allow
 DynamoDBMetadataStore to work with older AWS
 SDK."

This reverts commit 18ba859013499ce394316c22c15e3c0b0c54e64b.

Change-Id: I4279abdc90aedc1d4756ff2a48bd646f02b21cc8
---
 hadoop-project/pom.xml                             |   13 +++++++++++++
 hadoop-tools/hadoop-aws/pom.xml                    |   15 +++++++++++++++
 .../fs/s3a/s3guard/DynamoDBMetadataStore.java      |    4 +---
 .../s3guard/PathMetadataDynamoDBTranslation.java   |   20 ++++----------------
 .../TestPathMetadataDynamoDBTranslation.java       |   15 +++------------
 5 files changed, 36 insertions(+), 31 deletions(-)

diff --git a/hadoop-project/pom.xml b/hadoop-project/pom.xml
index 6f648c9..5a4727e 100644
--- a/hadoop-project/pom.xml
+++ b/hadoop-project/pom.xml
@@ -682,6 +682,11 @@
         <version>${aws-java-sdk.version}</version>
       </dependency>
       <dependency>
+        <groupId>com.amazonaws</groupId>
+        <artifactId>DynamoDBLocal</artifactId>
+        <version>${aws-java-sdk.version}</version>
+      </dependency>
+      <dependency>
         <groupId>org.apache.mina</groupId>
         <artifactId>mina-core</artifactId>
         <version>2.0.0-M5</version>
@@ -1396,4 +1401,12 @@
       </build>
     </profile>
   </profiles>
+
+  <repositories>
+    <repository>
+      <id>dynamodblocal</id>
+      <name>AWS DynamoDB Local Release Repository</name>
+      <url>http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release</url>
+    </repository>
+  </repositories>
 </project>
diff --git a/hadoop-tools/hadoop-aws/pom.xml b/hadoop-tools/hadoop-aws/pom.xml
index f8d32dd..ab8b5f2 100644
--- a/hadoop-tools/hadoop-aws/pom.xml
+++ b/hadoop-tools/hadoop-aws/pom.xml
@@ -464,6 +464,21 @@
       <artifactId>joda-time</artifactId>
     </dependency>
     <dependency>
+      <groupId>com.amazonaws</groupId>
+      <artifactId>DynamoDBLocal</artifactId>
+      <scope>test</scope>
+      <exclusions>
+        <exclusion>
+          <groupId>org.hamcrest</groupId>
+          <artifactId>hamcrest-core</artifactId>
+        </exclusion>
+        <exclusion>
+          <groupId>org.eclipse.jetty</groupId>
+          <artifactId>jetty-http</artifactId>
+        </exclusion>
+      </exclusions>
+    </dependency>
+    <dependency>
       <groupId>junit</groupId>
       <artifactId>junit</artifactId>
       <scope>test</scope>
diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java
index e40043b..f5da22b 100644
--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java
+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java
@@ -24,7 +24,6 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
-import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 
@@ -337,8 +336,7 @@ public PathMetadata get(Path path) throws IOException {
               .withConsistentRead(true)
               .withMaxResultSize(1); // limit 1
           final ItemCollection<QueryOutcome> items = table.query(spec);
-          Iterator itemsIterator = items.iterator();
-          status.setIsEmptyDirectory(!(itemsIterator.hasNext()));
+          status.setIsEmptyDirectory(!(items.iterator().hasNext()));
         }
       }
 
diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/PathMetadataDynamoDBTranslation.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/PathMetadataDynamoDBTranslation.java
index a0d88c5..ad89cf9 100644
--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/PathMetadataDynamoDBTranslation.java
+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/PathMetadataDynamoDBTranslation.java
@@ -104,26 +104,14 @@ static PathMetadata itemToPathMetadata(URI s3aUri, Item item, String username)
     if (s3aUri != null) {
       path = path.makeQualified(s3aUri, null);
     }
-    boolean isDir = false;
-    try {
-      isDir = item.getBoolean(IS_DIR);
-    } catch(Exception e) {}
+    boolean isDir = item.hasAttribute(IS_DIR) && item.getBoolean(IS_DIR);
     final FileStatus fileStatus;
     if (isDir) {
       fileStatus = new S3AFileStatus(true, path, username);
     } else {
-      long len = 0;
-      long modTime = 0;
-      long block = 0;
-      try {
-        len = item.getLong(FILE_LENGTH);
-      } catch(Exception e) {}
-       try {
-        modTime = item.getLong(MOD_TIME);
-      } catch(Exception e) {}
-      try {
-        block = item.getLong(BLOCK_SIZE);
-      } catch(Exception e) {}
+      long len = item.hasAttribute(FILE_LENGTH) ? item.getLong(FILE_LENGTH) : 0;
+      long modTime = item.hasAttribute(MOD_TIME) ? item.getLong(MOD_TIME) : 0;
+      long block = item.hasAttribute(BLOCK_SIZE) ? item.getLong(BLOCK_SIZE) : 0;
       fileStatus = new S3AFileStatus(len, modTime, path, block, username);
     }
 
diff --git a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestPathMetadataDynamoDBTranslation.java b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestPathMetadataDynamoDBTranslation.java
index ab62e45..7518d7c 100644
--- a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestPathMetadataDynamoDBTranslation.java
+++ b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestPathMetadataDynamoDBTranslation.java
@@ -151,20 +151,11 @@ private static void verify(Item item, PathMetadata meta) {
     final Path path = Path.getPathWithoutSchemeAndAuthority(status.getPath());
     assertEquals(item.get(PARENT), path.getParent().toString());
     assertEquals(item.get(CHILD), path.getName());
-    boolean isDir = false;
-    try {
-      isDir = item.getBoolean(IS_DIR);
-    } catch (Exception e) {}
+    boolean isDir = item.hasAttribute(IS_DIR) && item.getBoolean(IS_DIR);
     assertEquals(isDir, status.isDirectory());
-    long len = 0;
-    try {
-      len = item.getLong(FILE_LENGTH);
-    } catch (Exception e) {}
+    long len = item.hasAttribute(FILE_LENGTH) ? item.getLong(FILE_LENGTH) : 0;
     assertEquals(len, status.getLen());
-    long bSize = 0;
-    try {
-      bSize = item.getLong(BLOCK_SIZE);
-    } catch (Exception e) {}
+    long bSize = item.hasAttribute(BLOCK_SIZE) ? item.getLong(BLOCK_SIZE) : 0;
     assertEquals(bSize, status.getBlockSize());
 
     /*
-- 
1.7.9.5

