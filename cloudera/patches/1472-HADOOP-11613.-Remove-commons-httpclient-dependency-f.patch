From 1919cc52cc4bc5c29cf2d719e1fd8a80c05ff433 Mon Sep 17 00:00:00 2001
From: cnauroth <cnauroth@apache.org>
Date: Mon, 22 Feb 2016 13:39:38 -0800
Subject: [PATCH 1472/2748] HADOOP-11613. Remove commons-httpclient dependency
 from hadoop-azure. Contributed by Masatake
 Iwasaki.

(cherry picked from commit d4f5fc23b208635e8f9a14c375d4101141aefa4a)

Conflicts:
hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/MockStorageInterface.java

Change-Id: I97ba4eda1ff66b3559f505a15ebae16a7355c684
---
 .../hadoop/fs/azure/MockStorageInterface.java      |   35 ++++++++------------
 1 file changed, 13 insertions(+), 22 deletions(-)

diff --git a/hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/MockStorageInterface.java b/hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/MockStorageInterface.java
index 047ea1b..8eb45a7 100644
--- a/hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/MockStorageInterface.java
+++ b/hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/MockStorageInterface.java
@@ -30,10 +30,11 @@
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.TimeZone;
-
-import org.apache.commons.httpclient.URIException;
-import org.apache.commons.httpclient.util.URIUtil;
+import java.util.List;
+import org.apache.commons.codec.DecoderException;
+import org.apache.commons.codec.net.URLCodec;
 import org.apache.commons.lang.NotImplementedException;
+import org.apache.http.client.utils.URIBuilder;
 
 import com.microsoft.windowsazure.storage.CloudStorageAccount;
 import com.microsoft.windowsazure.storage.OperationContext;
@@ -63,6 +64,7 @@
   private final ArrayList<PreExistingContainer> preExistingContainers =
       new ArrayList<MockStorageInterface.PreExistingContainer>();
   private String baseUriString;
+  private static final URLCodec codec = new URLCodec();
 
   public InMemoryBlockBlobStore getBackingStore() {
     return backingStore;
@@ -121,22 +123,17 @@ public StorageCredentials getCredentials() {
    */
   private static String convertUriToDecodedString(URI uri) {
     try {
-      String result = URIUtil.decode(uri.toString());
-      return result;
-    } catch (URIException e) {
+      return codec.decode(uri.toString());
+    } catch (DecoderException e) {
       throw new AssertionError("Failed to decode URI: " + uri.toString());
     }
   }
 
   private static URI convertKeyToEncodedUri(String key) {
     try {
-      String encodedKey = URIUtil.encodePath(key);
-      URI uri = new URI(encodedKey);
-      return uri;
+      return new URIBuilder().setPath(key).build();
     } catch (URISyntaxException e) {
       throw new AssertionError("Failed to encode key: " + key);
-    } catch (URIException e) {
-      throw new AssertionError("Failed to encode key: " + key);
     }
   }
 
@@ -144,11 +141,8 @@ private static URI convertKeyToEncodedUri(String key) {
   public CloudBlobContainerWrapper getContainerReference(String name)
       throws URISyntaxException, StorageException {
     String fullUri;
-    try {
-      fullUri = baseUriString + "/" + URIUtil.encodePath(name);
-    } catch (URIException e) {
-      throw new RuntimeException("problem encoding fullUri", e);
-    }
+    URIBuilder builder = new URIBuilder(baseUriString);
+    fullUri = builder.setPath(builder.getPath() + "/" + name).toString();
 
     MockCloudBlobContainerWrapper container = new MockCloudBlobContainerWrapper(
         fullUri, name);
@@ -238,8 +232,6 @@ public CloudPageBlobWrapper getPageBlobReference(String blobAddressUri)
     // helper to create full URIs for directory and blob.
     // use withTrailingSlash=true to get a good path for a directory.
     private String fullUriString(String relativePath, boolean withTrailingSlash) {
-      String fullUri;
-
       String baseUri = this.baseUri;
       if (!baseUri.endsWith("/")) {
         baseUri += "/";
@@ -250,12 +242,11 @@ private String fullUriString(String relativePath, boolean withTrailingSlash) {
       }
 
       try {
-        fullUri = baseUri + URIUtil.encodePath(relativePath);
-      } catch (URIException e) {
+        URIBuilder builder = new URIBuilder(baseUri);
+        return builder.setPath(builder.getPath() + relativePath).toString();
+      } catch (URISyntaxException e) {
         throw new RuntimeException("problem encoding fullUri", e);
       }
-
-      return fullUri;
     }
   }
 
-- 
1.7.9.5

