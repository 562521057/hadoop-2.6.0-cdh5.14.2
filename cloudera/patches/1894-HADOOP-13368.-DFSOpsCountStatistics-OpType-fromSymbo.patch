From 89555986ae391aa869012eabe4ecdb1ec9025c0e Mon Sep 17 00:00:00 2001
From: Jitendra Pandey <jitendra@apache.org>
Date: Fri, 15 Jul 2016 14:28:53 -0700
Subject: [PATCH 1894/2748] HADOOP-13368.
 DFSOpsCountStatistics$OpType#fromSymbol and
 s3a.Statistic#fromSymbol should be O(1)
 operation. Contributed by Mingliang Liu.

(cherry picked from commit a363277be50a69786dbdfd0dd243dc8d3f136366)

Change-Id: Ifdd2ea81a573b788a444c90207d97ceb56f987b0
---
 .../hadoop/hdfs/TestDFSOpsCountStatistics.java     |    2 ++
 .../apache/hadoop/hdfs/DFSOpsCountStatistics.java  |   18 ++++++++++--------
 .../java/org/apache/hadoop/fs/s3a/Statistic.java   |   20 ++++++++++++--------
 3 files changed, 24 insertions(+), 16 deletions(-)

diff --git a/hadoop-hdfs-project/hadoop-hdfs-client/src/test/java/org/apache/hadoop/hdfs/TestDFSOpsCountStatistics.java b/hadoop-hdfs-project/hadoop-hdfs-client/src/test/java/org/apache/hadoop/hdfs/TestDFSOpsCountStatistics.java
index 429509d..d9c5c1c 100644
--- a/hadoop-hdfs-project/hadoop-hdfs-client/src/test/java/org/apache/hadoop/hdfs/TestDFSOpsCountStatistics.java
+++ b/hadoop-hdfs-project/hadoop-hdfs-client/src/test/java/org/apache/hadoop/hdfs/TestDFSOpsCountStatistics.java
@@ -111,12 +111,14 @@ public void testGetLongStatistics() {
 
   @Test
   public void testGetLong() {
+    assertNull(statistics.getLong(null));
     assertNull(statistics.getLong(NO_SUCH_OP));
     verifyStatistics();
   }
 
   @Test
   public void testIsTracked() {
+    assertFalse(statistics.isTracked(null));
     assertFalse(statistics.isTracked(NO_SUCH_OP));
 
     final Iterator<LongStatistic> iter = statistics.getLongStatistics();
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOpsCountStatistics.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOpsCountStatistics.java
index 83d880a..d631dd4 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOpsCountStatistics.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOpsCountStatistics.java
@@ -21,6 +21,7 @@
 import org.apache.hadoop.hdfs.protocol.HdfsConstants;
 
 import java.util.EnumMap;
+import java.util.HashMap;
 import java.util.Iterator;
 import java.util.Map;
 import java.util.Map.Entry;
@@ -88,6 +89,14 @@
     TRUNCATE(CommonStatisticNames.OP_TRUNCATE),
     UNSET_STORAGE_POLICY("op_unset_storage_policy");
 
+    private static final Map<String, OpType> SYMBOL_MAP =
+        new HashMap<>(OpType.values().length);
+    static {
+      for (OpType opType : values()) {
+        SYMBOL_MAP.put(opType.getSymbol(), opType);
+      }
+    }
+
     private final String symbol;
 
     OpType(String symbol) {
@@ -99,14 +108,7 @@ public String getSymbol() {
     }
 
     public static OpType fromSymbol(String symbol) {
-      if (symbol != null) {
-        for (OpType opType : values()) {
-          if (opType.getSymbol().equals(symbol)) {
-            return opType;
-          }
-        }
-      }
-      return null;
+      return SYMBOL_MAP.get(symbol);
     }
   }
 
diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Statistic.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Statistic.java
index 3c205f3..36d163c 100644
--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Statistic.java
+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Statistic.java
@@ -20,6 +20,9 @@
 
 import org.apache.hadoop.fs.StorageStatistics.CommonStatisticNames;
 
+import java.util.HashMap;
+import java.util.Map;
+
 /**
  * Statistic which are collected in S3A.
  * These statistics are available at a low level in {@link S3AStorageStatistics}
@@ -105,6 +108,14 @@
   STREAM_ABORT_BYTES_DISCARDED("stream_bytes_discarded_in_abort",
       "Count of bytes discarded by aborting the stream");
 
+  private static final Map<String, Statistic> SYMBOL_MAP =
+      new HashMap<>(Statistic.values().length);
+  static {
+    for (Statistic stat : values()) {
+      SYMBOL_MAP.put(stat.getSymbol(), stat);
+    }
+  }
+
   Statistic(String symbol, String description) {
     this.symbol = symbol;
     this.description = description;
@@ -123,14 +134,7 @@ public String getSymbol() {
    * @return the value or null.
    */
   public static Statistic fromSymbol(String symbol) {
-    if (symbol != null) {
-      for (Statistic opType : values()) {
-        if (opType.getSymbol().equals(symbol)) {
-          return opType;
-        }
-      }
-    }
-    return null;
+    return SYMBOL_MAP.get(symbol);
   }
 
   public String getDescription() {
-- 
1.7.9.5

