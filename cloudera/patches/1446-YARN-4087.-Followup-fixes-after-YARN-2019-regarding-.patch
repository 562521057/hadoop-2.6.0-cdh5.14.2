From fe9de37a2b6044abee742670a1369fa9640c6c23 Mon Sep 17 00:00:00 2001
From: Xuan <xgong@apache.org>
Date: Mon, 7 Sep 2015 18:09:35 -0700
Subject: [PATCH 1446/2748] YARN-4087. Followup fixes after YARN-2019
 regarding RM behavior when state-store error
 occurs. Contributed by Jian He

(cherry picked from commit 9f7fcb54e798cf4fda1ea7972dd96491976e1857)
(cherry picked from commit 1828ba00be40721ae798e2288a75a5e7d187b643)

Conflicts:
	hadoop-yarn-project/CHANGES.txt
	hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java

Change-Id: Icf34a78200ff5a89e37645060879e26670b767a9
---
 .../apache/hadoop/yarn/conf/YarnConfiguration.java |    2 +-
 .../src/main/resources/yarn-default.xml            |    5 ++++-
 .../resourcemanager/recovery/RMStateStore.java     |   15 +++++++++------
 3 files changed, 14 insertions(+), 8 deletions(-)

diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java
index 6c20638..c3d0e16 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java
@@ -385,7 +385,7 @@ private static void addDeprecatedKeys() {
   public static final boolean DEFAULT_RM_RECOVERY_ENABLED = false;
 
   public static final String YARN_FAIL_FAST = YARN_PREFIX + "fail-fast";
-  public static final boolean DEFAULT_YARN_FAIL_FAST = true;
+  public static final boolean DEFAULT_YARN_FAIL_FAST = false;
 
   public static final String RM_FAIL_FAST = RM_PREFIX + "fail-fast";
 
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/yarn-default.xml b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/yarn-default.xml
index 0e54f60..681b551 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/yarn-default.xml
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/yarn-default.xml
@@ -289,9 +289,12 @@
 
   <property>
     <description>Should YARN fail fast if it encounters any errors.
+      This is a global config for all other components including RM,NM etc.
+      If no value is set for component-specific config (e.g yarn.resourcemanager.fail-fast),
+      this value will be the default.
     </description>
     <name>yarn.fail-fast</name>
-    <value>true</value>
+    <value>false</value>
   </property>
 
   <property>
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java
index e20de4f..e0fe143 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java
@@ -44,6 +44,7 @@
 import org.apache.hadoop.yarn.api.records.ApplicationId;
 import org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext;
 import org.apache.hadoop.yarn.api.records.impl.pb.ApplicationSubmissionContextPBImpl;
+import org.apache.hadoop.yarn.conf.HAUtil;
 import org.apache.hadoop.yarn.conf.YarnConfiguration;
 import org.apache.hadoop.yarn.event.AsyncDispatcher;
 import org.apache.hadoop.yarn.event.Dispatcher;
@@ -852,18 +853,20 @@ protected void handleStoreEvent(RMStateStoreEvent event) {
    */
   protected void notifyStoreOperationFailed(Exception failureCause) {
     LOG.error("State store operation failed ", failureCause);
-    if (failureCause instanceof StoreFencedException) {
+    if (HAUtil.isHAEnabled(getConfig())) {
+      LOG.warn("State-store fenced ! Transitioning RM to standby");
       updateFencedState();
       Thread standByTransitionThread =
           new Thread(new StandByTransitionThread());
       standByTransitionThread.setName("StandByTransitionThread Handler");
       standByTransitionThread.start();
+    } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {
+      LOG.fatal("Fail RM now due to state-store error!");
+      rmDispatcher.getEventHandler().handle(
+          new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,
+              failureCause));
     } else {
-      if (YarnConfiguration.shouldRMFailFast(getConfig())) {
-        rmDispatcher.getEventHandler().handle(
-            new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,
-                failureCause));
-      }
+      LOG.warn("Skip the state-store error.");
     }
   }
  
-- 
1.7.9.5

