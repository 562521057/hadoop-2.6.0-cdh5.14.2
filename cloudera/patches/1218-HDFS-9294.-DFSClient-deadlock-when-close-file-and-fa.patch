From 81fc207abcbe86c6b21c5ea4c22e0b118d4a9dff Mon Sep 17 00:00:00 2001
From: Tsz-Wo Nicholas Sze <szetszwo@hortonworks.com>
Date: Wed, 2 Dec 2015 17:39:28 -0800
Subject: [PATCH 1218/2748] HDFS-9294. DFSClient deadlock when close file and
 failed to renew lease.  Contributed by Brahma
 Reddy Battula

(cherry picked from commit 4123650e92c5b2fee121fb33c1ed62da010174ef)

Conflicts:
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java

Change-Id: I2982eb5f158664ea7886acb3669e804fa7af5bb8
---
 .../org/apache/hadoop/hdfs/DFSOutputStream.java    |   32 +++++++++++---------
 1 file changed, 18 insertions(+), 14 deletions(-)

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java
index 652114b..d6adf02 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java
@@ -2393,13 +2393,15 @@ private synchronized void start() {
    * Aborts this output stream and releases any system 
    * resources associated with this stream.
    */
-  synchronized void abort() throws IOException {
-    if (isClosed()) {
-      return;
+  void abort() throws IOException {
+    synchronized (this) {
+      if (isClosed()) {
+        return;
+      }
+      streamer.setLastException(new IOException("Lease timeout of "
+          + (dfsClient.getHdfsTimeout() / 1000) + " seconds expired."));
+      closeThreads(true);
     }
-    streamer.setLastException(new IOException("Lease timeout of "
-        + (dfsClient.getHdfsTimeout()/1000) + " seconds expired."));
-    closeThreads(true);
     dfsClient.endFileLease(fileId);
   }
 
@@ -2445,14 +2447,17 @@ private void closeThreads(boolean force) throws IOException {
    * resources associated with this stream.
    */
   @Override
-  public synchronized void close() throws IOException {
-    TraceScope scope =
-        dfsClient.newPathTraceScope("DFSOutputStream#close", src);
-    try {
-      closeImpl();
-    } finally {
-      scope.close();
+  public void close() throws IOException {
+    synchronized (this) {
+      TraceScope scope = dfsClient.newPathTraceScope("DFSOutputStream#close",
+          src);
+      try {
+        closeImpl();
+      } finally {
+        scope.close();
+      }
     }
+    dfsClient.endFileLease(fileId);
   }
 
   private synchronized void closeImpl() throws IOException {
@@ -2488,7 +2493,6 @@ private synchronized void closeImpl() throws IOException {
       } finally {
         scope.close();
       }
-      dfsClient.endFileLease(fileId);
     } catch (ClosedChannelException e) {
     } finally {
       setClosed();
-- 
1.7.9.5

