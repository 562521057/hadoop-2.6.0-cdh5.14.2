From fa2fd142ad179c4060c2998e3dfced6ea26f7683 Mon Sep 17 00:00:00 2001
From: Mingliang Liu <liuml07@apache.org>
Date: Thu, 6 Apr 2017 14:11:34 -0700
Subject: [PATCH 2425/2748] HADOOP-14172. S3Guard: import does not import
 empty directory. Contributed by Sean Mackrory

(cherry picked from commit 2bc50dd937d582202a8b5d54694beac0f9b72d51)

Change-Id: I54ea6c4d4269a74b3698a28429d83954c0740c0f
---
 .../org/apache/hadoop/fs/s3a/S3AFileSystem.java    |   15 +++++++++++++--
 .../apache/hadoop/fs/s3a/s3guard/S3GuardTool.java  |    2 +-
 .../hadoop/fs/s3a/s3guard/TestS3GuardTool.java     |    6 +++++-
 3 files changed, 19 insertions(+), 4 deletions(-)

diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java
index 2850ac7..4d9f56e 100644
--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java
+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java
@@ -2418,6 +2418,18 @@ public boolean isFile(Path f) throws IOException {
   @Override
   public RemoteIterator<LocatedFileStatus> listFiles(Path f,
       boolean recursive) throws FileNotFoundException, IOException {
+    return innerListFiles(f, recursive,
+        new Listing.AcceptFilesOnly(qualify(f)));
+  }
+
+  public RemoteIterator<LocatedFileStatus> listFilesAndDirectories(Path f,
+      boolean recursive) throws IOException {
+    return innerListFiles(f, recursive,
+        new Listing.AcceptAllButSelfAndS3nDirs(qualify(f)));
+  }
+
+  private RemoteIterator<LocatedFileStatus> innerListFiles(Path f, boolean
+      recursive, Listing.FileStatusAcceptor acceptor) throws IOException {
     incrementStatistic(INVOCATION_LIST_FILES);
     Path path = qualify(f);
     LOG.debug("listFiles({}, {})", path, recursive);
@@ -2438,8 +2450,7 @@ public boolean isFile(Path f) throws IOException {
         return listing.createLocatedFileStatusIterator(
             listing.createFileStatusListingIterator(path,
                 createListObjectsRequest(key, delimiter),
-                ACCEPT_ALL,
-                new Listing.AcceptFilesOnly(path)));
+                ACCEPT_ALL, acceptor));
       }
     } catch (AmazonClientException e) {
       // TODO s3guard:
diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java
index 9579839..fef8e2d 100644
--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java
+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java
@@ -445,7 +445,7 @@ private void putParentsIfNotPresent(FileStatus f) throws IOException {
     private void importDir(FileStatus status) throws IOException {
       Preconditions.checkArgument(status.isDirectory());
       RemoteIterator<LocatedFileStatus> it =
-          s3a.listFiles(status.getPath(), true);
+          s3a.listFilesAndDirectories(status.getPath(), true);
 
       while (it.hasNext()) {
         LocatedFileStatus located = it.next();
diff --git a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestS3GuardTool.java b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestS3GuardTool.java
index 132cf1a..8874511 100644
--- a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestS3GuardTool.java
+++ b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestS3GuardTool.java
@@ -55,6 +55,8 @@ public void testImportCommand() throws IOException {
     fs.mkdirs(parent);
     Path dir = new Path(parent, "a");
     fs.mkdirs(dir);
+    Path emptyDir = new Path(parent, "emptyDir");
+    fs.mkdirs(emptyDir);
     for (int i = 0; i < 10; i++) {
       String child = String.format("file-%d", i);
       try (FSDataOutputStream out = fs.create(new Path(dir, child))) {
@@ -66,12 +68,14 @@ public void testImportCommand() throws IOException {
     cmd.setMetadataStore(ms);
 
     assertEquals("Import command did not exit successfully - see output",
-        SUCCESS, cmd.run(new String[]{"import", dir.toString()}));
+        SUCCESS, cmd.run(new String[]{"import", parent.toString()}));
 
     DirListingMetadata children =
         ms.listChildren(dir);
     assertEquals("Unexpected number of paths imported", 10, children
         .getListing().size());
+    assertEquals("Expected 2 items: empty directory and a parent directory", 2,
+        ms.listChildren(parent).getListing().size());
     // assertTrue(children.isAuthoritative());
   }
 
-- 
1.7.9.5

