From 8fe5e2fc6ab2d44a158158935161ca9d1f93f346 Mon Sep 17 00:00:00 2001
From: Junping Du <junping_du@apache.org>
Date: Fri, 20 Feb 2015 09:43:39 -0800
Subject: [PATCH 1297/2748] YARN-2799. Cleanup TestLogAggregationService based
 on the change in YARN-90. Contributed by Zhihai
 Xu

(cherry picked from commit c33ae271c24f0770c9735ccd2086cafda4f4e0b2)

 Conflicts:
	hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/TestLogAggregationService.java

Change-Id: Ieac4d34b92676a8dc0cf67b228f85de5db88c7b3
---
 .../logaggregation/TestLogAggregationService.java  |   22 --------------------
 1 file changed, 22 deletions(-)

diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/TestLogAggregationService.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/TestLogAggregationService.java
index 074b7fd..c76d624 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/TestLogAggregationService.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/test/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/TestLogAggregationService.java
@@ -244,7 +244,6 @@ private void verifyLocalFileDeletion(
     };
 
     checkEvents(appEventHandler, expectedEvents, true, "getType", "getApplicationID");
-    dispatcher.stop();
   }
 
   /* Test to verify fix for YARN-3793 */
@@ -363,7 +362,6 @@ public void testNoContainerOnNode() throws Exception {
             ApplicationEventType.APPLICATION_LOG_HANDLING_FINISHED)
     };
     checkEvents(appEventHandler, expectedEvents, true, "getType", "getApplicationID");
-    dispatcher.stop();
     logAggregationService.close();
   }
 
@@ -376,10 +374,6 @@ public void testMultipleAppsLogAggregation() throws Exception {
         this.remoteRootLogDir.getAbsolutePath());
     
     String[] fileNames = new String[] { "stdout", "stderr", "syslog" };
-    DrainDispatcher dispatcher = createDispatcher();
-    EventHandler<ApplicationEvent> appEventHandler = mock(EventHandler.class);
-    dispatcher.register(ApplicationEventType.class, appEventHandler);
-    
     LogAggregationService logAggregationService =
         new LogAggregationService(dispatcher, this.context, this.delSrvc,
                                   super.dirsHandler);
@@ -509,7 +503,6 @@ public void testMultipleAppsLogAggregation() throws Exception {
             ApplicationEventType.APPLICATION_LOG_HANDLING_FINISHED)
     };
     checkEvents(appEventHandler, expectedFinishedEvents, false, "getType", "getApplicationID");
-    dispatcher.stop();
   }
   
   @Test
@@ -586,8 +579,6 @@ public void testVerifyAndCreateRemoteDirNonExistence()
     File aNewFile = new File(String.valueOf("tmp"+System.currentTimeMillis()));
     this.conf.set(YarnConfiguration.NM_REMOTE_APP_LOG_DIR, 
         aNewFile.getAbsolutePath());
-    
-    DrainDispatcher dispatcher = createDispatcher();
     LogAggregationService logAggregationService = spy(
         new LogAggregationService(dispatcher, this.context, this.delSrvc,
                                   super.dirsHandler));
@@ -1329,10 +1320,6 @@ public void testLogAggregationServiceWithPatterns() throws Exception {
     this.conf.set(YarnConfiguration.NM_REMOTE_APP_LOG_DIR,
       this.remoteRootLogDir.getAbsolutePath());
 
-    DrainDispatcher dispatcher = createDispatcher();
-    EventHandler<ApplicationEvent> appEventHandler = mock(EventHandler.class);
-    dispatcher.register(ApplicationEventType.class, appEventHandler);
-
     ApplicationId application1 = BuilderUtils.newApplicationId(1234, 1);
     ApplicationId application2 = BuilderUtils.newApplicationId(1234, 2);
     ApplicationId application3 = BuilderUtils.newApplicationId(1234, 3);
@@ -1489,7 +1476,6 @@ public void testLogAggregationServiceWithPatterns() throws Exception {
           ApplicationEventType.APPLICATION_LOG_HANDLING_FINISHED) };
     checkEvents(appEventHandler, expectedFinishedEvents, false, "getType",
       "getApplicationID");
-    dispatcher.stop();
   }
 
   @Test (timeout = 50000)
@@ -1526,10 +1512,6 @@ private void testLogAggregationService(boolean retentionSizeLimitation)
     // again in next cycle.
     this.conf.setLong(YarnConfiguration.DEBUG_NM_DELETE_DELAY_SEC, 3600);
 
-    DrainDispatcher dispatcher = createDispatcher();
-    EventHandler<ApplicationEvent> appEventHandler = mock(EventHandler.class);
-    dispatcher.register(ApplicationEventType.class, appEventHandler);
-
     ApplicationId application =
         BuilderUtils.newApplicationId(System.currentTimeMillis(), 1);
     ApplicationAttemptId appAttemptId =
@@ -1636,7 +1618,6 @@ private void testLogAggregationService(boolean retentionSizeLimitation)
       new ContainerId[] { container }, logFiles3, 3, true);
     logAggregationService.stop();
     assertEquals(0, logAggregationService.getNumAggregators());
-    dispatcher.stop();
   }
 
 
@@ -1646,8 +1627,6 @@ public void testAddNewTokenSentFromRMForLogAggregation() throws Exception {
     conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,
       "kerberos");
     UserGroupInformation.setConfiguration(conf);
-    DrainDispatcher dispatcher = createDispatcher();
-    dispatcher.register(ApplicationEventType.class, appEventHandler);
 
     ApplicationId application1 = BuilderUtils.newApplicationId(1234, 1);
     Application mockApp = mock(Application.class);
@@ -1694,7 +1673,6 @@ public Boolean get() {
       }
     }, 1000, 20000);
     logAggregationService.stop();
-    dispatcher.stop();
   }
 
   private int numOfLogsAvailable(LogAggregationService logAggregationService,
-- 
1.7.9.5

