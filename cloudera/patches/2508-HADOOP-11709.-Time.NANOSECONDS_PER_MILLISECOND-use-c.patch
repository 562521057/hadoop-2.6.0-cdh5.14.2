From 2888979242870677732106c00df4502566bcc7a5 Mon Sep 17 00:00:00 2001
From: Tsuyoshi Ozawa <ozawa@apache.org>
Date: Sat, 21 Mar 2015 00:54:20 +0900
Subject: [PATCH 2508/2748] HADOOP-11709. Time.NANOSECONDS_PER_MILLISECOND -
 use class-level final constant instead of method
 variable. Contributed by Ajith S.

(cherry picked from commit 43dde502b3be2133d62f1f074f016f35a56a7e2c)
(cherry picked from commit ed7f847c959a0c1bf10c5cf3e972f8926ea21eb7)

 Conflicts:
	hadoop-common-project/hadoop-common/CHANGES.txt

Change-Id: I6edf5e6b9a5b0ac40ef659f239e192ea4c43ccc6
---
 .../src/main/java/org/apache/hadoop/util/Time.java |    7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
index 987e1b0..20e2965 100644
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Time.java
@@ -28,6 +28,11 @@
 public final class Time {
 
   /**
+   * number of nano seconds in 1 millisecond
+   */
+  private static final long NANOSECONDS_PER_MILLISECOND = 1000000;
+
+  /**
    * Current system time.  Do not use this to calculate a duration or interval
    * to sleep, because it will be broken by settimeofday.  Instead, use
    * monotonicNow.
@@ -47,8 +52,6 @@ public static long now() {
    * @return a monotonic clock that counts in milliseconds.
    */
   public static long monotonicNow() {
-    final long NANOSECONDS_PER_MILLISECOND = 1000000;
-
     return System.nanoTime() / NANOSECONDS_PER_MILLISECOND;
   }
 }
-- 
1.7.9.5

