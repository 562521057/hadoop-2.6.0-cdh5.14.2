From 82954e9bfed65fa5bad75a5cbeadeff19e0f76b0 Mon Sep 17 00:00:00 2001
From: Daniel Templeton <daniel@cloudera.com>
Date: Mon, 11 Jul 2016 18:30:52 -0700
Subject: [PATCH 1663/2748] Revert "YARN-4087. Followup fixes after YARN-2019
 regarding RM behavior when state-store error
 occurs. Contributed by Jian He"

This reverts commit fe9de37a2b6044abee742670a1369fa9640c6c23.

Change-Id: I7287cd59203920010d4cd756a1248ec7666a658e
(cherry picked from commit bd118f1dbce7dc5214baaa6cfb9365efe1c41302)
(cherry picked from commit d5eee9ae57e9df6a57a6afe90e684b7cfbcf2faf)
---
 .../apache/hadoop/yarn/conf/YarnConfiguration.java |    2 +-
 .../src/main/resources/yarn-default.xml            |    5 +----
 .../resourcemanager/recovery/RMStateStore.java     |   15 ++++++---------
 3 files changed, 8 insertions(+), 14 deletions(-)

diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java
index f6e8256..8082910 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/YarnConfiguration.java
@@ -385,7 +385,7 @@ private static void addDeprecatedKeys() {
   public static final boolean DEFAULT_RM_RECOVERY_ENABLED = false;
 
   public static final String YARN_FAIL_FAST = YARN_PREFIX + "fail-fast";
-  public static final boolean DEFAULT_YARN_FAIL_FAST = false;
+  public static final boolean DEFAULT_YARN_FAIL_FAST = true;
 
   public static final String RM_FAIL_FAST = RM_PREFIX + "fail-fast";
 
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/yarn-default.xml b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/yarn-default.xml
index 97afcab..e38d870 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/yarn-default.xml
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/resources/yarn-default.xml
@@ -289,12 +289,9 @@
 
   <property>
     <description>Should YARN fail fast if it encounters any errors.
-      This is a global config for all other components including RM,NM etc.
-      If no value is set for component-specific config (e.g yarn.resourcemanager.fail-fast),
-      this value will be the default.
     </description>
     <name>yarn.fail-fast</name>
-    <value>false</value>
+    <value>true</value>
   </property>
 
   <property>
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java
index 54bf93c..2d3c658 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java
@@ -44,7 +44,6 @@
 import org.apache.hadoop.yarn.api.records.ApplicationId;
 import org.apache.hadoop.yarn.api.records.ApplicationSubmissionContext;
 import org.apache.hadoop.yarn.api.records.impl.pb.ApplicationSubmissionContextPBImpl;
-import org.apache.hadoop.yarn.conf.HAUtil;
 import org.apache.hadoop.yarn.conf.YarnConfiguration;
 import org.apache.hadoop.yarn.event.AsyncDispatcher;
 import org.apache.hadoop.yarn.event.Dispatcher;
@@ -853,20 +852,18 @@ protected void handleStoreEvent(RMStateStoreEvent event) {
    */
   protected void notifyStoreOperationFailed(Exception failureCause) {
     LOG.error("State store operation failed ", failureCause);
-    if (HAUtil.isHAEnabled(getConfig())) {
-      LOG.warn("State-store fenced ! Transitioning RM to standby");
+    if (failureCause instanceof StoreFencedException) {
       updateFencedState();
       Thread standByTransitionThread =
           new Thread(new StandByTransitionThread());
       standByTransitionThread.setName("StandByTransitionThread Handler");
       standByTransitionThread.start();
-    } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {
-      LOG.fatal("Fail RM now due to state-store error!");
-      rmDispatcher.getEventHandler().handle(
-          new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,
-              failureCause));
     } else {
-      LOG.warn("Skip the state-store error.");
+      if (YarnConfiguration.shouldRMFailFast(getConfig())) {
+        rmDispatcher.getEventHandler().handle(
+            new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,
+                failureCause));
+      }
     }
   }
  
-- 
1.7.9.5

