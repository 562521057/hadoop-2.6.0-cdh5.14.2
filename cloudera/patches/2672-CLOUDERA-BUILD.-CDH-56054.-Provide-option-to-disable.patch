From 39c379a92783fdf8439f523b130b33b34461f096 Mon Sep 17 00:00:00 2001
From: John Zhuge <jzhuge@cloudera.com>
Date: Tue, 31 Oct 2017 11:43:52 -0700
Subject: [PATCH 2672/2748] CLOUDERA-BUILD. CDH-56054. Provide option to
 disable old JSP web UI

Change-Id: I1b4e04622245d03146baec6d3878042d112ee49a
---
 .../org/apache/hadoop/http/DisableJspFilter.java   |   40 ++++++++++++++++++++
 .../java/org/apache/hadoop/http/HttpServer2.java   |    4 ++
 .../org/apache/hadoop/http/TestHttpServer.java     |   18 +++++++++
 3 files changed, 62 insertions(+)
 create mode 100644 hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/DisableJspFilter.java

diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/DisableJspFilter.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/DisableJspFilter.java
new file mode 100644
index 0000000..00f303b
--- /dev/null
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/DisableJspFilter.java
@@ -0,0 +1,40 @@
+package org.apache.hadoop.http;
+
+import java.io.IOException;
+
+import javax.servlet.Filter;
+import javax.servlet.FilterChain;
+import javax.servlet.FilterConfig;
+import javax.servlet.ServletException;
+import javax.servlet.ServletRequest;
+import javax.servlet.ServletResponse;
+import javax.servlet.http.HttpServletResponse;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+
+/**
+ * A servlet filter to disable JSP.
+ */
+public class DisableJspFilter implements Filter {
+  static final Logger LOG = LoggerFactory.getLogger(DisableJspFilter.class);
+
+  @Override
+  public void init(FilterConfig filterConfig) throws ServletException {
+  }
+
+  @Override
+  public void doFilter(ServletRequest servletRequest,
+                       ServletResponse servletResponse,
+                       FilterChain filterChain)
+      throws IOException, ServletException {
+    final String msg = "JSP web UI has been disabled.";
+    LOG.warn(msg + " Rejecting request " + servletRequest);
+    ((HttpServletResponse)servletResponse).sendError(
+        HttpServletResponse.SC_FORBIDDEN, msg);
+  }
+
+  @Override
+  public void destroy() {
+  }
+}
diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java
index 7a009af..0c4fd93 100644
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java
@@ -392,6 +392,10 @@ private void initializeWebServer(String name, String hostName,
 
     Preconditions.checkNotNull(webAppContext);
 
+    if (conf.getBoolean("cloudera.disable-jsp-webui", false)) {
+      webAppContext.addFilter(DisableJspFilter.class, "*.jsp", 1);
+    }
+
     int maxThreads = conf.getInt(HTTP_MAX_THREADS, -1);
     // If HTTP_MAX_THREADS is not configured, QueueThreadPool() will use the
     // default value (currently 250).
diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/http/TestHttpServer.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/http/TestHttpServer.java
index 67d0caf..ad31b71 100644
--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/http/TestHttpServer.java
+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/http/TestHttpServer.java
@@ -247,6 +247,24 @@ public void run() {
   }
 
   @Test
+  public void testDisableJsp() throws Exception {
+    Configuration conf = new Configuration();
+    conf.setInt(HttpServer2.HTTP_MAX_THREADS, 10);
+    conf.setBoolean("cloudera.disable-jsp-webui", true);
+    HttpServer2 myServer = createTestServer(conf);
+    myServer.start();
+    URL myBaseUrl = getServerURL(myServer);
+    LOG.info("HTTP server started: "+ myBaseUrl);
+
+    URL servletUrl = new URL(myBaseUrl, "/testjsp.jsp");
+    HttpURLConnection conn = (HttpURLConnection)servletUrl.openConnection();
+    conn.connect();
+    assertEquals(403, conn.getResponseCode());
+
+    myServer.stop();
+  }
+
+  @Test
   public void testHttpResonseContainsXFrameOptions() throws IOException {
     URL url = new URL(baseUrl, "");
     HttpURLConnection conn = (HttpURLConnection) url.openConnection();
-- 
1.7.9.5

