From ab2f3f373a6c61b9e9328e72585f55ef2038bf11 Mon Sep 17 00:00:00 2001
From: Mingliang Liu <liuml07@apache.org>
Date: Thu, 1 Dec 2016 12:54:03 -0800
Subject: [PATCH 2113/2748] HDFS-11132. Allow AccessControlException in
 contract tests when getFileStatus on subdirectory
 of existing files. Contributed by Vishwajeet
 Dusane

(cherry picked from commit 19f373a46b2abb7a575f7884a9c7443b8ed67cd3)

Conflicts:
	hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FileContextMainOperationsBaseTest.java
	hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FileSystemContractBaseTest.java

Change-Id: I9a63de1f7fddce7fa742d7874afae052be0cec86
---
 .../fs/FileContextMainOperationsBaseTest.java      |   22 ++++++++++++++++----
 .../hadoop/fs/FileSystemContractBaseTest.java      |   22 ++++++++++++++++----
 2 files changed, 36 insertions(+), 8 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FileContextMainOperationsBaseTest.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FileContextMainOperationsBaseTest.java
index b791b14..4d0ab7d 100644
--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FileContextMainOperationsBaseTest.java
+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FileContextMainOperationsBaseTest.java
@@ -29,6 +29,8 @@
 import org.apache.hadoop.fs.Options.CreateOpts;
 import org.apache.hadoop.fs.Options.Rename;
 import org.apache.hadoop.fs.permission.FsPermission;
+import org.apache.hadoop.security.AccessControlException;
+import org.apache.hadoop.test.GenericTestUtils;
 import org.junit.After;
 import org.junit.Assert;
 import static org.junit.Assert.*;
@@ -251,8 +253,14 @@ public void testMkdirsFailsForSubdirectoryOfExistingFile() throws Exception {
     } catch (IOException e) {
       // expected
     }
-    Assert.assertFalse(exists(fc, testSubDir));
-    
+
+    try {
+      Assert.assertFalse(exists(fc, testSubDir));
+    } catch (AccessControlException e) {
+      // Expected : HDFS-11132 Checks on paths under file may be rejected by
+      // file missing execute permission.
+    }
+
     Path testDeepSubDir = getTestRootPath(fc, "test/hadoop/file/deep/sub/dir");
     try {
       fc.mkdir(testDeepSubDir, FsPermission.getDefault(), true);
@@ -260,8 +268,14 @@ public void testMkdirsFailsForSubdirectoryOfExistingFile() throws Exception {
     } catch (IOException e) {
       // expected
     }
-    Assert.assertFalse(exists(fc, testDeepSubDir));
-    
+
+    try {
+      Assert.assertFalse(exists(fc, testDeepSubDir));
+    } catch (AccessControlException e) {
+      // Expected : HDFS-11132 Checks on paths under file may be rejected by
+      // file missing execute permission.
+    }
+
   }
   
   @Test
diff --git a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FileSystemContractBaseTest.java b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FileSystemContractBaseTest.java
index c14a002..f261d60 100644
--- a/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FileSystemContractBaseTest.java
+++ b/hadoop-common-project/hadoop-common/src/test/java/org/apache/hadoop/fs/FileSystemContractBaseTest.java
@@ -27,6 +27,8 @@
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.permission.FsPermission;
+import org.apache.hadoop.security.AccessControlException;
+import org.apache.hadoop.util.StringUtils;
 
 /**
  * <p>
@@ -136,8 +138,14 @@ public void testMkdirsFailsForSubdirectoryOfExistingFile() throws Exception {
     } catch (IOException e) {
       // expected
     }
-    assertFalse(fs.exists(testSubDir));
-    
+
+    try {
+      assertFalse(fs.exists(testSubDir));
+    } catch (AccessControlException e) {
+      // Expected : HDFS-11132 Checks on paths under file may be rejected by
+      // file missing execute permission.
+    }
+
     Path testDeepSubDir = path("/test/hadoop/file/deep/sub/dir");
     try {
       fs.mkdirs(testDeepSubDir);
@@ -145,8 +153,14 @@ public void testMkdirsFailsForSubdirectoryOfExistingFile() throws Exception {
     } catch (IOException e) {
       // expected
     }
-    assertFalse(fs.exists(testDeepSubDir));
-    
+
+    try {
+      assertFalse(fs.exists(testDeepSubDir));
+    } catch (AccessControlException e) {
+      // Expected : HDFS-11132 Checks on paths under file may be rejected by
+      // file missing execute permission.
+    }
+
   }
 
   public void testMkdirsWithUmask() throws Exception {
-- 
1.7.9.5

