From 19fe931e2a4f87505226d52cb2200e146a2931ab Mon Sep 17 00:00:00 2001
From: Wei-Chiu Chuang <weichiu@apache.org>
Date: Tue, 17 Oct 2017 01:42:59 +0200
Subject: [PATCH 2688/2748] HADOOP-14948. Document missing config key
 hadoop.treat.subject.external. Contributed by
 Ajay Kumar.

(cherry picked from commit 19db2837cbdb883b7c38adf01c2b7f9cad8d49d4)
(cherry picked from commit e906108fc98a011630d12a43e557b81d7ef7ea5d)
(cherry picked from commit 1452ba139ea845ad9e82a5902d239b59a789bff3)

Conflicts:
	hadoop-common-project/hadoop-common/src/main/resources/core-default.xml

Change-Id: I144633b9f3ed8c116e2b87c5c6ba7b7304153fcf
Ref: CDH-61959
---
 .../src/main/resources/core-default.xml            |   48 +++++++++++++-------
 1 file changed, 31 insertions(+), 17 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/main/resources/core-default.xml b/hadoop-common-project/hadoop-common/src/main/resources/core-default.xml
index 891c9e3..2d1e673 100644
--- a/hadoop-common-project/hadoop-common/src/main/resources/core-default.xml
+++ b/hadoop-common-project/hadoop-common/src/main/resources/core-default.xml
@@ -112,14 +112,14 @@
   </description>
 </property>
 
-<!-- 
-=== Multiple group mapping providers configuration sample === 
+<!--
+=== Multiple group mapping providers configuration sample ===
   This sample illustrates a typical use case for CompositeGroupsMapping where
 Hadoop authentication uses MIT Kerberos which trusts an AD realm. In this case, service
 principals such as hdfs, mapred, hbase, hive, oozie and etc can be placed in In MIT Kerberos,
 but end users are just from the trusted AD. For the service principals, ShellBasedUnixGroupsMapping
-provider can be used to query their groups for efficiency, and for end users, LdapGroupsMapping 
-provider can be used. This avoids to add group entries in AD for service principals when only using 
+provider can be used to query their groups for efficiency, and for end users, LdapGroupsMapping
+provider can be used. This avoids to add group entries in AD for service principals when only using
 LdapGroupsMapping provider.
   In case multiple ADs are involved and trusted by the MIT Kerberos in this use case, LdapGroupsMapping
 provider can be used more times with different AD specific configurations. This sample also shows how
@@ -129,7 +129,7 @@ to do that. Here are the necessary configurations.
   <name>hadoop.security.group.mapping</name>
   <value>org.apache.hadoop.security.CompositeGroupsMapping</value>
   <description>
-    Class for user to group mapping (get groups for a given user) for ACL, which 
+    Class for user to group mapping (get groups for a given user) for ACL, which
     makes use of other multiple providers to provide the service.
   </description>
 </property>
@@ -138,7 +138,7 @@ to do that. Here are the necessary configurations.
   <name>hadoop.security.group.mapping.providers</name>
   <value>shell4services,ad4usersX,ad4usersY</value>
   <description>
-    Comma separated of names of other providers to provide user to group mapping. 
+    Comma separated of names of other providers to provide user to group mapping.
   </description>
 </property>
 
@@ -157,7 +157,7 @@ to do that. Here are the necessary configurations.
   <name>hadoop.security.group.mapping.provider.shell4services</name>
   <value>org.apache.hadoop.security.ShellBasedUnixGroupsMapping</value>
   <description>
-    Class for group mapping provider named by 'shell4services'. The name can then be referenced 
+    Class for group mapping provider named by 'shell4services'. The name can then be referenced
     by hadoop.security.group.mapping.providers property.
   </description>
 </property>
@@ -166,7 +166,7 @@ to do that. Here are the necessary configurations.
   <name>hadoop.security.group.mapping.provider.ad4usersX</name>
   <value>org.apache.hadoop.security.LdapGroupsMapping</value>
   <description>
-    Class for group mapping provider named by 'ad4usersX'. The name can then be referenced 
+    Class for group mapping provider named by 'ad4usersX'. The name can then be referenced
     by hadoop.security.group.mapping.providers property.
   </description>
 </property>
@@ -175,7 +175,7 @@ to do that. Here are the necessary configurations.
   <name>hadoop.security.group.mapping.provider.ad4usersY</name>
   <value>org.apache.hadoop.security.LdapGroupsMapping</value>
   <description>
-    Class for group mapping provider named by 'ad4usersY'. The name can then be referenced 
+    Class for group mapping provider named by 'ad4usersY'. The name can then be referenced
     by hadoop.security.group.mapping.providers property.
   </description>
 </property>
@@ -184,7 +184,7 @@ to do that. Here are the necessary configurations.
 <name>hadoop.security.group.mapping.provider.ad4usersX.ldap.url</name>
 <value>ldap://ad-host-for-users-X:389</value>
   <description>
-    ldap url for the provider named by 'ad4usersX'. Note this property comes from 
+    ldap url for the provider named by 'ad4usersX'. Note this property comes from
     'hadoop.security.group.mapping.ldap.url'.
   </description>
 </property>
@@ -193,7 +193,7 @@ to do that. Here are the necessary configurations.
 <name>hadoop.security.group.mapping.provider.ad4usersY.ldap.url</name>
 <value>ldap://ad-host-for-users-Y:389</value>
   <description>
-    ldap url for the provider named by 'ad4usersY'. Note this property comes from 
+    ldap url for the provider named by 'ad4usersY'. Note this property comes from
     'hadoop.security.group.mapping.ldap.url'.
   </description>
 </property>
@@ -218,7 +218,7 @@ for ldap providers in the same way as above does.
   <description>The class names of the Span Receivers to use for Hadoop.
   </description>
 </property>
- 
+
 <property>
   <name>hadoop.security.groups.cache.secs</name>
   <value>300</value>
@@ -2332,10 +2332,10 @@ for ldap providers in the same way as above does.
   <name>hadoop.htrace.spanreceiver.classes</name>
   <value></value>
   <description>
-    A comma separated list of the fully-qualified class name of classes 
-    implementing SpanReceiver. The tracing system works by collecting 
-    information in structs called 'Spans'. It is up to you to choose 
-    how you want to receive this information by implementing the 
+    A comma separated list of the fully-qualified class name of classes
+    implementing SpanReceiver. The tracing system works by collecting
+    information in structs called 'Spans'. It is up to you to choose
+    how you want to receive this information by implementing the
     SpanReceiver interface.
   </description>
 </property>
@@ -2455,10 +2455,24 @@ for ldap providers in the same way as above does.
   <value>0</value>
   <description>The maximum number of concurrent connections a server is allowed
     to accept. If this limit is exceeded, incoming connections will first fill
-    the listen queue and then may go to an OS-specific listen overflow queue. 
+    the listen queue and then may go to an OS-specific listen overflow queue.
     The client may fail or timeout, but the server can avoid running out of file
     descriptors using this feature. 0 means no limit.
   </description>
 </property>
 
+    <property>
+        <name>hadoop.treat.subject.external</name>
+        <value>false</value>
+        <description>
+            When creating UGI with UserGroupInformation(Subject), treat the passed
+            subject external if set to true, and assume the owner of the subject
+            should do the credential renewal.
+
+            When true this property will introduce an incompatible change which
+            may require changes in client code. For more details, see the jiras:
+            HADOOP-13805,HADOOP-13558.
+        </description>
+    </property>
+
 </configuration>
-- 
1.7.9.5

