From 1affb71507f3d4bb7c2e504dc727040d54d8417a Mon Sep 17 00:00:00 2001
From: Arpit Agarwal <arp@apache.org>
Date: Fri, 24 Apr 2015 16:47:48 -0700
Subject: [PATCH 1324/2748] HDFS-8211. DataNode UUID is always null in the JMX
 counter. (Contributed by Anu Engineer)

(cherry picked from commit 932cff610a5d65618c6c3e1a8bf15a0d11cb7d33)

Change-Id: I0a5c0fd299a7b436c4922fc0e56e4b713759b9ba
---
 .../hadoop/hdfs/server/datanode/DataNode.java      |    4 +-
 .../hdfs/server/datanode/TestDataNodeUUID.java     |   65 ++++++++++++++++++++
 2 files changed, 67 insertions(+), 2 deletions(-)
 create mode 100644 hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDataNodeUUID.java

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
index 652d8ac..c0c2854 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java
@@ -1219,7 +1219,7 @@ public static String generateUuid() {
    *
    * @throws IOException
    */
-  private synchronized void checkDatanodeUuid() throws IOException {
+  synchronized void checkDatanodeUuid() throws IOException {
     if (storage.getDatanodeUuid() == null) {
       storage.setDatanodeUuid(generateUuid());
       storage.writeAll();
@@ -2896,7 +2896,7 @@ public DNConf getDnConf() {
   }
 
   public String getDatanodeUuid() {
-    return id == null ? null : id.getDatanodeUuid();
+    return storage == null ? null : storage.getDatanodeUuid();
   }
 
   boolean shouldRun() {
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDataNodeUUID.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDataNodeUUID.java
new file mode 100644
index 0000000..34e53a3
--- /dev/null
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDataNodeUUID.java
@@ -0,0 +1,65 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hdfs.server.datanode;
+
+
+import org.apache.hadoop.conf.Configuration;
+import org.apache.hadoop.fs.FileSystem;
+import org.apache.hadoop.hdfs.DFSConfigKeys;
+import org.apache.hadoop.hdfs.HdfsConfiguration;
+import org.junit.Test;
+
+import java.net.InetSocketAddress;
+import java.util.ArrayList;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotEquals;
+
+public class TestDataNodeUUID {
+
+  /**
+   * This test makes sure that we have a valid
+   * Node ID after the checkNodeUUID is done.
+   */
+  @Test
+  public void testDatanodeUuid() throws Exception {
+
+    final InetSocketAddress NN_ADDR = new InetSocketAddress(
+      "localhost", 5020);
+    Configuration conf = new HdfsConfiguration();
+    conf.set(DFSConfigKeys.DFS_DATANODE_ADDRESS_KEY, "0.0.0.0:0");
+    conf.set(DFSConfigKeys.DFS_DATANODE_HTTP_ADDRESS_KEY, "0.0.0.0:0");
+    conf.set(DFSConfigKeys.DFS_DATANODE_IPC_ADDRESS_KEY, "0.0.0.0:0");
+    FileSystem.setDefaultUri(conf,
+      "hdfs://" + NN_ADDR.getHostName() + ":" + NN_ADDR.getPort());
+    ArrayList<StorageLocation> locations = new ArrayList<>();
+
+    DataNode dn = new DataNode(conf, locations, null);
+
+    //Assert that Node iD is null
+    String nullString = null;
+    assertEquals(dn.getDatanodeUuid(), nullString);
+
+    // CheckDataNodeUUID will create an UUID if UUID is null
+    dn.checkDatanodeUuid();
+
+    // Make sure that we have a valid DataNodeUUID at that point of time.
+    assertNotEquals(dn.getDatanodeUuid(), nullString);
+  }
+}
-- 
1.7.9.5

