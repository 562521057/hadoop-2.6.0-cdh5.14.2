From 18ba859013499ce394316c22c15e3c0b0c54e64b Mon Sep 17 00:00:00 2001
From: Sean Mackrory <sean@cloudera.com>
Date: Fri, 20 Jan 2017 12:20:09 -0700
Subject: [PATCH 2229/2748] CLOUDERA-BUILD. Allow DynamoDBMetadataStore to
 work with older AWS SDK.

Returned iterator type is not public until more recent releases of the
Amazon SDK. DynamoDBLocal requires dependencies that are incompatible
with the current CDH release. All testing will be done against the
Amazon DynamoDB service.

Change-Id: Id15262dc1df63a01def6dc4ce673a6f8a44a8e3a
---
 hadoop-project/pom.xml                             |   13 -------------
 hadoop-tools/hadoop-aws/pom.xml                    |   15 ---------------
 .../fs/s3a/s3guard/DynamoDBMetadataStore.java      |    4 +++-
 .../s3guard/PathMetadataDynamoDBTranslation.java   |   20 ++++++++++++++++----
 .../TestPathMetadataDynamoDBTranslation.java       |   15 ++++++++++++---
 5 files changed, 31 insertions(+), 36 deletions(-)

diff --git a/hadoop-project/pom.xml b/hadoop-project/pom.xml
index 53336c2..6d057b0 100644
--- a/hadoop-project/pom.xml
+++ b/hadoop-project/pom.xml
@@ -688,11 +688,6 @@
       </dependency>
       <dependency>
         <groupId>com.amazonaws</groupId>
-        <artifactId>DynamoDBLocal</artifactId>
-        <version>${aws-java-sdk.version}</version>
-      </dependency>
-      <dependency>
-        <groupId>com.amazonaws</groupId>
         <artifactId>aws-java-sdk-sts</artifactId>
         <version>${aws-java-sdk.version}</version>
       </dependency>
@@ -1411,12 +1406,4 @@
       </build>
     </profile>
   </profiles>
-
-  <repositories>
-    <repository>
-      <id>dynamodblocal</id>
-      <name>AWS DynamoDB Local Release Repository</name>
-      <url>http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release</url>
-    </repository>
-  </repositories>
 </project>
diff --git a/hadoop-tools/hadoop-aws/pom.xml b/hadoop-tools/hadoop-aws/pom.xml
index 861255e..a3cb74f 100644
--- a/hadoop-tools/hadoop-aws/pom.xml
+++ b/hadoop-tools/hadoop-aws/pom.xml
@@ -436,21 +436,6 @@
     </dependency>
     <dependency>
       <groupId>com.amazonaws</groupId>
-      <artifactId>DynamoDBLocal</artifactId>
-      <scope>test</scope>
-      <exclusions>
-        <exclusion>
-          <groupId>org.hamcrest</groupId>
-          <artifactId>hamcrest-core</artifactId>
-        </exclusion>
-        <exclusion>
-          <groupId>org.eclipse.jetty</groupId>
-          <artifactId>jetty-http</artifactId>
-        </exclusion>
-      </exclusions>
-    </dependency>
-    <dependency>
-      <groupId>com.amazonaws</groupId>
       <artifactId>aws-java-sdk-sts</artifactId>
       <scope>compile</scope>
     </dependency>
diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java
index 07ee542..aad43ae 100644
--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java
+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java
@@ -21,6 +21,7 @@
 import java.io.IOException;
 import java.util.ArrayList;
 import java.util.Collection;
+import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 
@@ -302,7 +303,8 @@ public PathMetadata get(Path path) throws IOException {
               .withConsistentRead(true)
               .withMaxResultSize(1); // limit 1
           final ItemCollection<QueryOutcome> items = table.query(spec);
-          status.setIsEmptyDirectory(!(items.iterator().hasNext()));
+          Iterator itemsIterator = items.iterator();
+          status.setIsEmptyDirectory(!(itemsIterator.hasNext()));
         }
       }
 
diff --git a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/PathMetadataDynamoDBTranslation.java b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/PathMetadataDynamoDBTranslation.java
index b3e23eb..4712cc9 100644
--- a/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/PathMetadataDynamoDBTranslation.java
+++ b/hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/PathMetadataDynamoDBTranslation.java
@@ -104,14 +104,26 @@ static PathMetadata itemToPathMetadata(URI s3aUri, Item item, String username)
     }
 
     path = path.makeQualified(s3aUri, null);
-    boolean isDir = item.hasAttribute(IS_DIR) && item.getBoolean(IS_DIR);
+    boolean isDir = false;
+    try {
+      isDir = item.getBoolean(IS_DIR);
+    } catch(Exception e) {}
     final FileStatus fileStatus;
     if (isDir) {
       fileStatus = new S3AFileStatus(true, path, username);
     } else {
-      long len = item.hasAttribute(FILE_LENGTH) ? item.getLong(FILE_LENGTH) : 0;
-      long modTime = item.hasAttribute(MOD_TIME) ? item.getLong(MOD_TIME) : 0;
-      long block = item.hasAttribute(BLOCK_SIZE) ? item.getLong(BLOCK_SIZE) : 0;
+      long len = 0;
+      long modTime = 0;
+      long block = 0;
+      try {
+        len = item.getLong(FILE_LENGTH);
+      } catch(Exception e) {}
+       try {
+        modTime = item.getLong(MOD_TIME);
+      } catch(Exception e) {}
+      try {
+        block = item.getLong(BLOCK_SIZE);
+      } catch(Exception e) {}
       fileStatus = new S3AFileStatus(len, modTime, path, block, username);
     }
 
diff --git a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestPathMetadataDynamoDBTranslation.java b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestPathMetadataDynamoDBTranslation.java
index 7518d7c..ab62e45 100644
--- a/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestPathMetadataDynamoDBTranslation.java
+++ b/hadoop-tools/hadoop-aws/src/test/java/org/apache/hadoop/fs/s3a/s3guard/TestPathMetadataDynamoDBTranslation.java
@@ -151,11 +151,20 @@ private static void verify(Item item, PathMetadata meta) {
     final Path path = Path.getPathWithoutSchemeAndAuthority(status.getPath());
     assertEquals(item.get(PARENT), path.getParent().toString());
     assertEquals(item.get(CHILD), path.getName());
-    boolean isDir = item.hasAttribute(IS_DIR) && item.getBoolean(IS_DIR);
+    boolean isDir = false;
+    try {
+      isDir = item.getBoolean(IS_DIR);
+    } catch (Exception e) {}
     assertEquals(isDir, status.isDirectory());
-    long len = item.hasAttribute(FILE_LENGTH) ? item.getLong(FILE_LENGTH) : 0;
+    long len = 0;
+    try {
+      len = item.getLong(FILE_LENGTH);
+    } catch (Exception e) {}
     assertEquals(len, status.getLen());
-    long bSize = item.hasAttribute(BLOCK_SIZE) ? item.getLong(BLOCK_SIZE) : 0;
+    long bSize = 0;
+    try {
+      bSize = item.getLong(BLOCK_SIZE);
+    } catch (Exception e) {}
     assertEquals(bSize, status.getBlockSize());
 
     /*
-- 
1.7.9.5

