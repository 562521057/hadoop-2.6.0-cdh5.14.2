From 45a956453fc1add6fe1e5d5b3740e65ee08cc0b8 Mon Sep 17 00:00:00 2001
From: Akira Ajisaka <aajisaka@apache.org>
Date: Thu, 19 Jan 2017 17:56:39 +0900
Subject: [PATCH 2220/2748] HADOOP-14001. Improve delegation token validity
 checking.

(cherry picked from commit 176346721006a03f41d028560e9e29b5931d5be2)
(cherry picked from commit c6c29d0080964e55ff84246af1e4149d1ef3162a)
(cherry picked from commit 1cf20b37ed55eb94e63216b13db33da40563c7f4)

 Conflicts:
	hadoop-common-project/hadoop-common/CHANGES.txt

Change-Id: I219dde36af226944467ec57378e57ef4b1dd9e99
---
 .../AbstractDelegationTokenSecretManager.java      |    6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java
index 88aebd4..368f754 100644
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java
@@ -28,7 +28,7 @@
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.IOException;
-import java.util.Arrays;
+import java.security.MessageDigest;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Iterator;
@@ -449,7 +449,7 @@ public synchronized String getTokenTrackingId(TokenIdent identifier) {
   public synchronized void verifyToken(TokenIdent identifier, byte[] password)
       throws InvalidToken {
     byte[] storedPassword = retrievePassword(identifier);
-    if (!Arrays.equals(password, storedPassword)) {
+    if (!MessageDigest.isEqual(password, storedPassword)) {
       throw new InvalidToken("token (" + identifier
           + ") is invalid, password doesn't match");
     }
@@ -492,7 +492,7 @@ public synchronized long renewToken(Token<TokenIdent> token,
           + " with sequenceNumber=" + id.getSequenceNumber());
     }
     byte[] password = createPassword(token.getIdentifier(), key.getKey());
-    if (!Arrays.equals(password, token.getPassword())) {
+    if (!MessageDigest.isEqual(password, token.getPassword())) {
       throw new AccessControlException(renewer +
           " is trying to renew a token with wrong password");
     }
-- 
1.7.9.5

