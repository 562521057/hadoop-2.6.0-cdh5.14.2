From b9db68e16ac06933c596d7be130e58407f0ea947 Mon Sep 17 00:00:00 2001
From: Masatake Iwasaki <iwasakims@apache.org>
Date: Fri, 26 Feb 2016 15:32:07 +0900
Subject: [PATCH 1516/2748] HADOOP-12711. Remove dependency on
 commons-httpclient for ServletUtil (Wei-Chiu
 Chuang via iwasakims)

(cherry picked from commit b0091338f2ffea0fb16fed01c44f911490d94c70)

Change-Id: Ief2a233ae55979a52cb261a44610b1cd68467481
---
 .../java/org/apache/hadoop/util/ServletUtil.java   |   34 +++++++++++---------
 1 file changed, 19 insertions(+), 15 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ServletUtil.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ServletUtil.java
index a401f3f..af1ca7a 100644
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ServletUtil.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ServletUtil.java
@@ -17,18 +17,22 @@
  */
 package org.apache.hadoop.util;
 
-import java.io.*;
+import java.io.IOException;
+import java.io.PrintWriter;
+import java.io.UnsupportedEncodingException;
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.net.URLEncoder;
 import java.util.Calendar;
 
 import javax.servlet.*;
 import javax.servlet.http.HttpServletRequest;
 
-import org.apache.commons.httpclient.URIException;
-import org.apache.commons.httpclient.util.URIUtil;
 import org.apache.hadoop.classification.InterfaceAudience;
 import org.apache.hadoop.classification.InterfaceStability;
 
 import com.google.common.base.Preconditions;
+import org.apache.http.client.utils.URIBuilder;
 
 @InterfaceAudience.Private
 @InterfaceStability.Unstable
@@ -134,9 +138,10 @@ public static String percentageGraph(float perc, int width) throws IOException {
    */
   public static String encodeQueryValue(final String value) {
     try {
-      return URIUtil.encodeWithinQuery(value, "UTF-8");
-    } catch (URIException e) {
-      throw new AssertionError("JVM does not support UTF-8"); // should never happen!
+      return URLEncoder.encode(value, "UTF-8");
+    } catch (UnsupportedEncodingException e) {
+      throw new AssertionError("Failed to encode query value in UTF-8: " +
+          value);
     }
   }
 
@@ -146,11 +151,7 @@ public static String encodeQueryValue(final String value) {
    * @return encoded path, null if UTF-8 is not supported
    */
   public static String encodePath(final String path) {
-    try {
-      return URIUtil.encodePath(path, "UTF-8");
-    } catch (URIException e) {
-      throw new AssertionError("JVM does not support UTF-8"); // should never happen!
-    }
+    return new URIBuilder().setPath(path).toString();
   }
 
   /**
@@ -159,11 +160,14 @@ public static String encodePath(final String path) {
    * @param servletName the name of servlet that precedes the path
    * @return decoded path component, null if UTF-8 is not supported
    */
-  public static String getDecodedPath(final HttpServletRequest request, String servletName) {
+  public static String getDecodedPath(final HttpServletRequest request,
+      String servletName) {
+    String requestURI = request.getRequestURI();
+    String uriPath = getRawPath(request, servletName);
     try {
-      return URIUtil.decode(getRawPath(request, servletName), "UTF-8");
-    } catch (URIException e) {
-      throw new AssertionError("JVM does not support UTF-8"); // should never happen!
+      return new URI(uriPath).getPath();
+    } catch (URISyntaxException e) {
+      throw new AssertionError("Failed to decode URI: " + requestURI);
     }
   }
 
-- 
1.7.9.5

