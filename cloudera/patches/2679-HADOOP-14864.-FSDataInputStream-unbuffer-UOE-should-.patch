From 445ad3dc6a98b04d50ba0c175303d2fb2e731268 Mon Sep 17 00:00:00 2001
From: John Zhuge <jzhuge@apache.org>
Date: Thu, 14 Sep 2017 20:35:25 +0200
Subject: [PATCH 2679/2748] HADOOP-14864. FSDataInputStream#unbuffer UOE
 should include stream class name. Contributed by
 Bharat Viswanadham.

(cherry picked from commit 7ee02d1065268511ec10a8b8852d0d6327419b9c)
(cherry picked from commit 584cd134e854e9915d35f618ddf03658818f0c6a)

Change-Id: I9e0e52bfcd774ecb5e6895e18b7fd658883d92a5
Ref: CDH-61969
---
 .../org/apache/hadoop/fs/FSDataInputStream.java    |    4 ++--
 .../java/org/apache/hadoop/fs/TestUnbuffer.java    |   21 ++++++++++++++++++++
 2 files changed, 23 insertions(+), 2 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FSDataInputStream.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FSDataInputStream.java
index 640db59..a80279d 100644
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FSDataInputStream.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FSDataInputStream.java
@@ -230,8 +230,8 @@ public void unbuffer() {
     try {
       ((CanUnbuffer)in).unbuffer();
     } catch (ClassCastException e) {
-      throw new UnsupportedOperationException("this stream does not " +
-          "support unbuffering.");
+      throw new UnsupportedOperationException("this stream " +
+          in.getClass().getName() + " does not " + "support unbuffering.");
     }
   }
 
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestUnbuffer.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestUnbuffer.java
index 52c33e9..aace7ed 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestUnbuffer.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/fs/TestUnbuffer.java
@@ -28,12 +28,18 @@
 import org.apache.hadoop.hdfs.PeerCache;
 import org.apache.hadoop.io.IOUtils;
 import org.junit.Assert;
+import org.junit.Rule;
 import org.junit.Test;
+import org.junit.rules.ExpectedException;
+import org.mockito.Mockito;
 
 public class TestUnbuffer {
   private static final Log LOG =
       LogFactory.getLog(TestUnbuffer.class.getName());
 
+  @Rule
+  public ExpectedException exception = ExpectedException.none();
+
   /**
    * Test that calling Unbuffer closes sockets.
    */
@@ -124,4 +130,19 @@ public void testOpenManyFilesViaTcp() throws Exception {
       }
     }
   }
+
+  /**
+   * Test unbuffer method which throws an Exception with class name included.
+   */
+  @Test
+  public void testUnbufferException() {
+    FSInputStream in = Mockito.mock(FSInputStream.class);
+    FSDataInputStream fs = new FSDataInputStream(in);
+
+    exception.expect(UnsupportedOperationException.class);
+    exception.expectMessage("this stream " + in.getClass().getName()
+        + " does not support unbuffering");
+
+    fs.unbuffer();
+  }
 }
-- 
1.7.9.5

