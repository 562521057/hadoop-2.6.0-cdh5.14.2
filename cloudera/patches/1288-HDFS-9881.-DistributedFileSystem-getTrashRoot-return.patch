From fcc9fbc3fd3a0c494faf7c14d5444e987bc76f92 Mon Sep 17 00:00:00 2001
From: Andrew Wang <wang@apache.org>
Date: Tue, 1 Mar 2016 16:35:39 -0800
Subject: [PATCH 1288/2748] HDFS-9881. DistributedFileSystem#getTrashRoot
 returns incorrect path for encryption zones.

(cherry picked from commit 4abb2fa687a80d2b76f2751dd31513822601b235)

Change-Id: Ic88c23ac53fccd2e8393f715894c7cf363fe38db
---
 .../apache/hadoop/hdfs/DistributedFileSystem.java  |    2 +-
 .../apache/hadoop/hdfs/TestEncryptionZones.java    |    8 ++++++++
 2 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java
index 042c0f7..c895e3d 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java
@@ -2183,7 +2183,7 @@ public Path getTrashRoot(Path path) {
       EncryptionZone ez = dfs.getEZForPath(parentSrc);
       if ((ez != null)) {
         return this.makeQualified(
-            new Path(ez.getPath(), FileSystem.TRASH_PREFIX +
+            new Path(new Path(ez.getPath(), FileSystem.TRASH_PREFIX),
                 dfs.ugi.getShortUserName()));
       }
     } catch (IOException e) {
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptionZones.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptionZones.java
index fc76357..3d28842 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptionZones.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/TestEncryptionZones.java
@@ -1385,6 +1385,14 @@ public void testRootDirEZTrash() throws Exception {
   private void verifyShellDeleteWithTrash(FsShell shell, Path path)
       throws Exception{
     try {
+      Path trashDir = shell.getCurrentTrashDir(path);
+      // Verify that trashDir has a path component named ".Trash"
+      Path checkTrash = trashDir;
+      while (!checkTrash.isRoot() && !checkTrash.getName().equals(".Trash")) {
+        checkTrash = checkTrash.getParent();
+      }
+      assertEquals("No .Trash component found in trash dir " + trashDir,
+          ".Trash", checkTrash.getName());
       final Path trashFile =
           new Path(shell.getCurrentTrashDir(path) + "/" + path);
       String[] argv = new String[]{"-rm", "-r", path.toString()};
-- 
1.7.9.5

