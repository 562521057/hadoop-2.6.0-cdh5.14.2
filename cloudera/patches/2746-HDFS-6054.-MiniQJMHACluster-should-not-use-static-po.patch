From 0bdd72f148fb686d890292486e603c8a082f90f6 Mon Sep 17 00:00:00 2001
From: Yongjun Zhang <yzhang@cloudera.com>
Date: Tue, 19 Jan 2016 22:54:47 -0800
Subject: [PATCH 2746/2748] HDFS-6054. MiniQJMHACluster should not use static
 port to avoid binding failure in unit test.
 (Yongjun Zhang)

(cherry picked from commit 57d0a94305b22a469062c7ce85b3159fee17a28b)

Conflicts:
	hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/qjournal/MiniQJMHACluster.java
(cherry picked from commit a5ee4c09de849b1fdb1ee69b2e40a071a7050456)

 Conflicts:
	hadoop-hdfs-project/hadoop-hdfs/CHANGES.txt

Change-Id: I1956229cca98c06d3d6b86fe743b15a1c0a4f9d6
(cherry picked from commit 40d5b8aacf8bbdb7d524556524e5475e58ef93fc)
---
 .../hadoop/hdfs/qjournal/MiniQJMHACluster.java     |   17 +++++---
 .../server/namenode/ha/TestFailureToReadEdits.java |   41 ++++++++++++++++----
 2 files changed, 45 insertions(+), 13 deletions(-)

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/qjournal/MiniQJMHACluster.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/qjournal/MiniQJMHACluster.java
index 61b9d4e..891e4ff 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/qjournal/MiniQJMHACluster.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/qjournal/MiniQJMHACluster.java
@@ -47,7 +47,6 @@
   private static final String NN1 = "nn1";
   private static final String NN2 = "nn2";
   private static final Random RANDOM = new Random();
-  private int basePort = 10000;
 
   public static class Builder {
     private final Configuration conf;
@@ -86,9 +85,12 @@ public static MiniDFSNNTopology createDefaultTopology(int basePort) {
   private MiniQJMHACluster(Builder builder) throws IOException {
     this.conf = builder.conf;
     int retryCount = 0;
+    int basePort = 10000;
+
     while (true) {
       try {
         basePort = 10000 + RANDOM.nextInt(1000) * 4;
+        LOG.info("Set MiniQJMHACluster basePort to " + basePort);
         // start 3 journal nodes
         journalCluster = new MiniJournalCluster.Builder(conf).format(true)
             .build();
@@ -98,7 +100,7 @@ private MiniQJMHACluster(Builder builder) throws IOException {
         // start cluster with 2 NameNodes
         MiniDFSNNTopology topology = createDefaultTopology(basePort);
 
-        initHAConf(journalURI, builder.conf);
+        initHAConf(journalURI, builder.conf, basePort);
 
         // First start up the NNs just to format the namespace. The MinIDFSCluster
         // has no way to just format the NameNodes without also starting them.
@@ -116,16 +118,21 @@ private MiniQJMHACluster(Builder builder) throws IOException {
 
         // restart the cluster
         cluster.restartNameNodes();
-        ++retryCount;
         break;
       } catch (BindException e) {
+        if (cluster != null) {
+          cluster.shutdown(true);
+          cluster = null;
+        }
+        ++retryCount;
         LOG.info("MiniQJMHACluster port conflicts, retried " +
             retryCount + " times");
       }
     }
   }
-  
-  private Configuration initHAConf(URI journalURI, Configuration conf) {
+
+  private Configuration initHAConf(URI journalURI, Configuration conf,
+      int basePort) {
     conf.set(DFSConfigKeys.DFS_NAMENODE_SHARED_EDITS_DIR_KEY,
         journalURI.toString());
     
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestFailureToReadEdits.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestFailureToReadEdits.java
index f930a65..1a79817 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestFailureToReadEdits.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/namenode/ha/TestFailureToReadEdits.java
@@ -27,10 +27,14 @@
 import static org.mockito.Mockito.spy;
 
 import java.io.IOException;
+import java.net.BindException;
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.LinkedList;
+import java.util.Random;
 
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
@@ -61,11 +65,14 @@
 
 @RunWith(Parameterized.class)
 public class TestFailureToReadEdits {
+  private static final Log LOG =
+      LogFactory.getLog(TestFailureToReadEdits.class);
 
   private static final String TEST_DIR1 = "/test1";
   private static final String TEST_DIR2 = "/test2";
   private static final String TEST_DIR3 = "/test3";
-  
+  private static final Random RANDOM = new Random();
+
   private final TestType clusterType;
   private final boolean useAsyncEditLogging;
   private Configuration conf;
@@ -113,14 +120,32 @@ public void setUpCluster() throws Exception {
     conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_EDITS_ASYNC_LOGGING,
         useAsyncEditLogging);
     HAUtil.setAllowStandbyReads(conf, true);
-    
+
     if (clusterType == TestType.SHARED_DIR_HA) {
-      MiniDFSNNTopology topology = MiniQJMHACluster.createDefaultTopology(10000);
-      cluster = new MiniDFSCluster.Builder(conf)
-        .nnTopology(topology)
-        .numDataNodes(0)
-        .checkExitOnShutdown(false)
-        .build();
+      int basePort = 10000;
+      int retryCount = 0;
+      while (true) {
+        try {
+          basePort = 10000 + RANDOM.nextInt(1000) * 4;
+          LOG.info("Set SHARED_DIR_HA cluster's basePort to " + basePort);
+          MiniDFSNNTopology topology =
+              MiniQJMHACluster.createDefaultTopology(basePort);
+          cluster = new MiniDFSCluster.Builder(conf)
+          .nnTopology(topology)
+          .numDataNodes(0)
+          .checkExitOnShutdown(false)
+          .build();
+          break;
+        } catch (BindException e) {
+          if (cluster != null) {
+            cluster.shutdown(true);
+            cluster = null;
+          }
+          ++retryCount;
+          LOG.info("SHARED_DIR_HA: MiniQJMHACluster port conflicts, retried " +
+              retryCount + " times " + e);
+        }
+      }
     } else {
       Builder builder = new MiniQJMHACluster.Builder(conf);
       builder.getDfsBuilder().numDataNodes(0).checkExitOnShutdown(false);
-- 
1.7.9.5

