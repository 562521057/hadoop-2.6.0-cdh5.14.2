From 541c8c7970253c47ed7c29153f6727d85c725595 Mon Sep 17 00:00:00 2001
From: Jason Lowe <jlowe@apache.org>
Date: Mon, 14 Nov 2016 20:20:50 +0000
Subject: [PATCH 2705/2748] MAPREDUCE-6797. Job history server scans can
 become blocked on a single, slow entry.
 Contributed by Prabhu Joseph

(cherry picked from commit 99c2bbd337942e4bc7b246a88dff53f98e530651)

Change-Id: I91382596d8a0810b2facfd9bd0646bcd47a57e92
(cherry picked from commit 2f28ddc2e70529c5b6cd15ad0c3fa0eb52d32fb9)
---
 .../hadoop/mapreduce/v2/hs/HistoryFileManager.java |   48 ++++++++++----------
 1 file changed, 23 insertions(+), 25 deletions(-)

diff --git a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java
index edde61d..80a3647 100644
--- a/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java
+++ b/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryFileManager.java
@@ -231,38 +231,36 @@ public HistoryFileInfo addIfAbsent(HistoryFileInfo fileInfo) {
         JobId firstMoveFailedKey = null;
         int moveFailedCount = 0;
 
-        while(cache.size() > maxSize && keys.hasNext()) {
+        while (cache.size() > maxSize && keys.hasNext()) {
           JobId key = keys.next();
           HistoryFileInfo firstValue = cache.get(key);
-          if(firstValue != null) {
-            synchronized(firstValue) {
-              if (firstValue.isMovePending()) {
-                if(firstValue.didMoveFail() &&
-                    firstValue.jobIndexInfo.getFinishTime() <= cutoff) {
-                  cache.remove(key);
-                  //Now lets try to delete it
-                  try {
-                    firstValue.delete();
-                  } catch (IOException e) {
-                    LOG.error("Error while trying to delete history files" +
-                    		" that could not be moved to done.", e);
+          if (firstValue != null) {
+            if (firstValue.isMovePending()) {
+              if (firstValue.didMoveFail() &&
+                  firstValue.jobIndexInfo.getFinishTime() <= cutoff) {
+                cache.remove(key);
+                // Now lets try to delete it
+                try {
+                  firstValue.delete();
+                } catch (IOException e) {
+                  LOG.error("Error while trying to delete history files" +
+                      " that could not be moved to done.", e);
+                }
+              } else {
+                if (firstValue.didMoveFail()) {
+                  if (moveFailedCount == 0) {
+                    firstMoveFailedKey = key;
                   }
+                  moveFailedCount += 1;
                 } else {
-                  if (firstValue.didMoveFail()) {
-                    if (moveFailedCount == 0) {
-                      firstMoveFailedKey = key;
-                    }
-                    moveFailedCount += 1;
-                  } else {
-                    if (inIntermediateCount == 0) {
-                      firstInIntermediateKey = key;
-                    }
-                    inIntermediateCount += 1;
+                  if (inIntermediateCount == 0) {
+                    firstInIntermediateKey = key;
                   }
+                  inIntermediateCount += 1;
                 }
-              } else {
-                cache.remove(key);
               }
+            } else {
+              cache.remove(key);
             }
           }
         }
-- 
1.7.9.5

