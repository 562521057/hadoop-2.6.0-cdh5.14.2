From 9d0ff1586241a19b1f777257b3ffe98219b63017 Mon Sep 17 00:00:00 2001
From: Karthik Kambatla <kasha@apache.org>
Date: Thu, 8 Sep 2016 21:11:20 -0700
Subject: [PATCH 1846/2748] YARN-5566. Client-side NM graceful decom is not
 triggered when jobs finish. Addendum to fix test
 flakiness. (Robert Kanter via kasha)

(cherry picked from commit 7a27b2a82f2c970282c7bd78037ddee90da570b2)

Conflicts:
	hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/MockRM.java
	hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestResourceTrackerService.java

Conflict Deails:
	- MockRM
		- Trivial conflicts due to NMwaitForState vs waitForState method
	- TestResourceTrackerService
		- Trivial conflicts due to NMwaitForState vs waitForState method

Change-Id: I6e75da1249f514a43976131963bd3343129fb9fa
---
 .../hadoop/yarn/server/resourcemanager/MockRM.java |    3 +++
 .../TestResourceTrackerService.java                |   10 ++++------
 2 files changed, 7 insertions(+), 6 deletions(-)

diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/MockRM.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/MockRM.java
index bb7eed3..8928ded 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/MockRM.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/MockRM.java
@@ -511,6 +511,9 @@ public void sendNodeLost(MockNM nm) throws Exception {
   public void NMwaitForState(NodeId nodeid, NodeState finalState)
       throws Exception {
     RMNode node = getRMContext().getRMNodes().get(nodeid);
+    if (node == null) {
+      node = getRMContext().getInactiveRMNodes().get(nodeid);
+    }
     Assert.assertNotNull("node shouldn't be null", node);
     int timeoutSecs = 0;
     while (!finalState.equals(node.getState()) && timeoutSecs++ < 20) {
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestResourceTrackerService.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestResourceTrackerService.java
index 9e718c6..d66ba04 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestResourceTrackerService.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/TestResourceTrackerService.java
@@ -244,19 +244,17 @@ public void testGracefulDecommissionNoApp() throws Exception {
     rm.NMwaitForState(nm3.getNodeId(), NodeState.DECOMMISSIONING);
 
     nodeHeartbeat1 = nm1.nodeHeartbeat(true);
-    rm.NMwaitForState(nm1.getNodeId(), NodeState.RUNNING);
     nodeHeartbeat2 = nm2.nodeHeartbeat(true);
-    rm.NMwaitForState(nm2.getNodeId(), NodeState.DECOMMISSIONED);
     nodeHeartbeat3 = nm3.nodeHeartbeat(true);
-    rm.NMwaitForState(nm3.getNodeId(), NodeState.DECOMMISSIONED);
 
     checkDecommissionedNMCount(rm, metricCount + 2);
+    rm.NMwaitForState(nm2.getNodeId(), NodeState.DECOMMISSIONED);
+    rm.NMwaitForState(nm3.getNodeId(), NodeState.DECOMMISSIONED);
 
-    nodeHeartbeat1 = nm1.nodeHeartbeat(true);
     Assert.assertTrue(NodeAction.NORMAL.equals(nodeHeartbeat1.getNodeAction()));
     nodeHeartbeat2 = nm2.nodeHeartbeat(true);
-    Assert.assertEquals(NodeAction.SHUTDOWN, nodeHeartbeat2.getNodeAction());
     nodeHeartbeat3 = nm3.nodeHeartbeat(true);
+    Assert.assertEquals(NodeAction.SHUTDOWN, nodeHeartbeat2.getNodeAction());
     Assert.assertEquals(NodeAction.SHUTDOWN, nodeHeartbeat3.getNodeAction());
   }
 
@@ -297,8 +295,8 @@ public void testGracefulDecommissionWithApp() throws Exception {
     // host1 should be DECOMMISSIONING due to running containers.
     // host3 should become DECOMMISSIONED.
     nm1.nodeHeartbeat(true);
-    rm.NMwaitForState(id1, NodeState.DECOMMISSIONING);
     nm3.nodeHeartbeat(true);
+    rm.NMwaitForState(id1, NodeState.DECOMMISSIONING);
     rm.NMwaitForState(id3, NodeState.DECOMMISSIONED);
     nm1.nodeHeartbeat(aaid, 2, ContainerState.RUNNING);
 
-- 
1.7.9.5

