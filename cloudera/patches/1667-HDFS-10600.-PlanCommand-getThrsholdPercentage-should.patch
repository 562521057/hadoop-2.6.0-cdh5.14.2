From b0caa003bab9121ed866b13db60f55d65dc3d49d Mon Sep 17 00:00:00 2001
From: Lei Xu <lei@apache.org>
Date: Thu, 14 Jul 2016 10:40:34 -0700
Subject: [PATCH 1667/2748] HDFS-10600. PlanCommand#getThrsholdPercentage
 should not use throughput value. (Yiqun Lin via
 lei)

(cherry picked from commit 382dff74751b745de28a212df4897f525111d228)

Conflicts:
	hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
	hadoop-hdfs-project/hadoop-hdfs/src/main/resources/hdfs-default.xml

Change-Id: Ia22f42da9e9d1a9e6abb8791f8d93b673313dea8
---
 .../java/org/apache/hadoop/hdfs/DFSConfigKeys.java |    8 +++-
 .../hadoop/hdfs/server/datanode/DiskBalancer.java  |   10 ++--
 .../server/diskbalancer/command/PlanCommand.java   |    4 +-
 .../src/main/resources/hdfs-default.xml            |   49 ++++++++++++++++++++
 4 files changed, 62 insertions(+), 9 deletions(-)

diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
index 714e8ab..092e2e4 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSConfigKeys.java
@@ -892,9 +892,9 @@
       "dfs.disk.balancer.enabled";
   public static final boolean DFS_DISK_BALANCER_ENABLED_DEFAULT = false;
 
-  public static final String DFS_DISK_BALANCER_MAX_DISK_THRUPUT =
+  public static final String DFS_DISK_BALANCER_MAX_DISK_THROUGHPUT =
       "dfs.disk.balancer.max.disk.throughputInMBperSec";
-  public static final int DFS_DISK_BALANCER_MAX_DISK_THRUPUT_DEFAULT =
+  public static final int DFS_DISK_BALANCER_MAX_DISK_THROUGHPUT_DEFAULT =
       10;
 
   public static final String DFS_DISK_BALANCER_MAX_DISK_ERRORS =
@@ -905,4 +905,8 @@
   public static final String DFS_DISK_BALANCER_BLOCK_TOLERANCE =
       "dfs.disk.balancer.block.tolerance.percent";
   public static final int DFS_DISK_BALANCER_BLOCK_TOLERANCE_DEFAULT = 5;
+
+  public static final String DFS_DISK_BALANCER_PLAN_THRESHOLD =
+      "dfs.disk.balancer.plan.threshold.percent";
+  public static final int DFS_DISK_BALANCER_PLAN_THRESHOLD_DEFAULT = 10;
 }
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java
index 9995efc..48bc04f 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DiskBalancer.java
@@ -109,8 +109,8 @@ public DiskBalancer(String dataNodeUUID,
         DFSConfigKeys.DFS_DISK_BALANCER_ENABLED,
         DFSConfigKeys.DFS_DISK_BALANCER_ENABLED_DEFAULT);
     this.bandwidth = conf.getInt(
-        DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THRUPUT,
-        DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THRUPUT_DEFAULT);
+        DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THROUGHPUT,
+        DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THROUGHPUT_DEFAULT);
   }
 
   /**
@@ -639,8 +639,8 @@ public DiskBalancerMover(FsDatasetSpi dataset, Configuration conf) {
       shouldRun = new AtomicBoolean(false);
 
       this.diskBandwidth = conf.getLong(
-          DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THRUPUT,
-          DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THRUPUT_DEFAULT);
+          DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THROUGHPUT,
+          DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THROUGHPUT_DEFAULT);
 
       this.blockTolerance = conf.getLong(
           DFSConfigKeys.DFS_DISK_BALANCER_BLOCK_TOLERANCE,
@@ -656,7 +656,7 @@ public DiskBalancerMover(FsDatasetSpi dataset, Configuration conf) {
         LOG.debug("Found 0 or less as max disk throughput, ignoring config " +
             "value. value : " + diskBandwidth);
         diskBandwidth =
-            DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THRUPUT_DEFAULT;
+            DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THROUGHPUT_DEFAULT;
       }
 
       if (this.blockTolerance <= 0) {
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/PlanCommand.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/PlanCommand.java
index 20b4c6f..f9af92a 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/PlanCommand.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/PlanCommand.java
@@ -213,8 +213,8 @@ private double getThresholdPercentage(CommandLine cmd) {
 
     if ((value <= 0.0) || (value > 100.0)) {
       value = getConf().getDouble(
-          DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THRUPUT,
-          DFSConfigKeys.DFS_DISK_BALANCER_MAX_DISK_THRUPUT_DEFAULT);
+          DFSConfigKeys.DFS_DISK_BALANCER_PLAN_THRESHOLD,
+          DFSConfigKeys.DFS_DISK_BALANCER_PLAN_THRESHOLD_DEFAULT);
     }
     return value;
   }
diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/resources/hdfs-default.xml b/hadoop-hdfs-project/hadoop-hdfs/src/main/resources/hdfs-default.xml
index 4a57e87..7df891f 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/resources/hdfs-default.xml
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/resources/hdfs-default.xml
@@ -2493,4 +2493,53 @@
     If true, set TCP_NODELAY to sockets for transferring data between Datanodes.
   </description>
 </property>
+
+<!--Disk baalncer properties-->
+  <property>
+    <name>dfs.disk.balancer.max.disk.throughputInMBperSec</name>
+    <value>10</value>
+    <description>Maximum disk bandwidth used by diskbalancer
+      during read from a source disk. The unit is MB/sec.
+    </description>
+  </property>
+
+  <property>
+    <name>dfs.disk.balancer.block.tolerance.percent</name>
+    <value>10</value>
+    <description>
+      When a disk balancer copy operation is proceeding, the datanode is still
+      active. So it might not be possible to move the exactly specified
+      amount of data. So tolerance allows us to define a percentage which
+      defines a good enough move.
+    </description>
+  </property>
+
+  <property>
+    <name>dfs.disk.balancer.max.disk.errors</name>
+    <value>5</value>
+    <description>
+      During a block move from a source to destination disk, we might
+      encounter various errors. This defines how many errors we can tolerate
+      before we declare a move between 2 disks (or a step) has failed.
+    </description>
+  </property>
+
+
+  <property>
+    <name>dfs.disk.balancer.enabled</name>
+    <value>false</value>
+    <description>
+        This enables the diskbalancer feature on a cluster. By default, disk
+      balancer is disabled.
+    </description>
+  </property>
+
+  <property>
+    <name>dfs.disk.balancer.plan.threshold.percent</name>
+    <value>10</value>
+    <description>
+        The percentage that disk tolerance that we are ok with in
+      a plan.
+    </description>
+  </property>
 </configuration>
-- 
1.7.9.5

