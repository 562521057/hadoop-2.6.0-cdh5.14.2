From 49819e7a414edcbc544d3908ecf2ebdb0d56b92c Mon Sep 17 00:00:00 2001
From: Yufei Gu <yufei@apache.org>
Date: Tue, 12 Sep 2017 14:58:23 -0700
Subject: [PATCH 2651/2748] YARN-7057. FSAppAttempt#getResourceUsage doesn't
 need to consider resources queued for preemption.
 (Contributed by Karthik via Yufei Gu)

(cherry picked from commit 82c5dd1d508292ed88eda0f5356776437ba67d4c)
(cherry picked from commit 1d40bc225a18bbfe9e5dce1c2f99ce4213b31cbc)

Change-Id: I4fc0d4d5d6d7a179923118f78465068a10b97d20
---
 .../scheduler/fair/FSAppAttempt.java               |   19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java
index 105449d..124a38b 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java
@@ -535,9 +535,16 @@ boolean canContainerBePreempted(RMContainer container) {
 
     // Check if the app's allocation will be over its fairshare even
     // after preempting this container
-    Resource usageAfterPreemption = Resources.subtract(
-        getResourceUsage(), container.getAllocatedResource());
+    Resource usageAfterPreemption = Resources.clone(getResourceUsage());
 
+    // Subtract resources of containers already queued for preemption
+    synchronized (preemptionVariablesLock) {
+      Resources.subtractFrom(usageAfterPreemption, resourcesToBePreempted);
+    }
+
+    // Subtract this container's allocation to compute usage after preemption
+    Resources.subtractFrom(
+        usageAfterPreemption, container.getAllocatedResource());
     return !isUsageBelowShare(usageAfterPreemption, getFairShare());
   }
 
@@ -1108,13 +1115,7 @@ public Resource getMaxShare() {
 
   @Override
   public Resource getResourceUsage() {
-    // Subtract copies the object, so that we have a snapshot,
-    // in case usage changes, while the caller is using the value
-    synchronized (preemptionVariablesLock) {
-      return containersToBePreempted.isEmpty()
-          ? getCurrentConsumption()
-          : Resources.subtract(getCurrentConsumption(), resourcesToBePreempted);
-    }
+    return getCurrentConsumption();
   }
 
   @Override
-- 
1.7.9.5

